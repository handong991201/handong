<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>R语言基础知识总结</title>
    <link href="/2021/06/20/R%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <url>/2021/06/20/R%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="R语言之数据挖掘"><a href="#R语言之数据挖掘" class="headerlink" title="R语言之数据挖掘"></a>R语言之数据挖掘</h1><h2 id="一、基本数据结构"><a href="#一、基本数据结构" class="headerlink" title="一、基本数据结构"></a>一、基本数据结构</h2><h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><ul><li><p>建立：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">a &lt;- <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)    <span class="hljs-comment"># c:collection</span><br>a = <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br><span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>) -&gt; a<br>assign(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>))<br>seq(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>,<span class="hljs-built_in">length</span> = <span class="hljs-number">5</span>)<span class="hljs-comment"># 输出5个数成等差数列，与matlab的linspace相似</span><br>seq(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>,by = <span class="hljs-number">8</span>) <span class="hljs-comment"># 步长为8,by=可省略</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-comment"># 1,2,3  这个序列重复三次，结果：1 2 3 1 2 3 1 2 3</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-built_in">rep</span>(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))<span class="hljs-comment"># rep(3,3)的结果为3，3，3结果：1 1 1 2 2 2 3 3 3，注：1：3的长度要与最后一个3对应</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,each = <span class="hljs-number">3</span>)    <span class="hljs-comment"># 结果等于上一个</span><br>sequence(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<span class="hljs-comment"># 1：3 = 1，2，3第二个1是指从1开始，最后一个1是指步长，有多少个数是看第一个参数的，结果 1 1 2 1 2 3</span><br>   <span class="hljs-comment"># 1      上面这个1说明只有一个数</span><br>   <span class="hljs-comment"># 1 2   上面这个2说明有两个数</span><br>   <span class="hljs-comment"># 1 2 3        上面这个3说明有三个数</span><br>sequence(<span class="hljs-built_in">c</span>(<span class="hljs-number">9</span>,<span class="hljs-number">3</span>),from = <span class="hljs-built_in">c</span>(<span class="hljs-number">5</span>,<span class="hljs-number">2</span>),by = <span class="hljs-built_in">c</span>(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-comment"># 首先开头的序列有9个数，起点为5，步长为3，第二个序列起点为2，步长为1</span><br><span class="hljs-comment"># 结果：5  8 11 14 17 20 23 26 29  2  3  4</span><br><span class="hljs-comment"># 第一个序列：5  8 11 14 17 20 23 26 29</span><br><span class="hljs-comment"># 第二个序列：2  3  4</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>运算：</p><blockquote><p>索引用  [  ]  ，用法跟matlab与python类似，可以在中括号内输入一个数组，取出多个值</p><p>加减运算</p><p>内积运算 %*%（矩阵乘法也用这个）</p><p>mean，sum，sqrt 等函数都支持向量</p></blockquote></li></ul><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><ul><li><p>建立</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">m = matrix(<span class="hljs-number">1</span>:<span class="hljs-number">9</span>,nrow = <span class="hljs-number">3</span>,ncol = <span class="hljs-number">3</span>,byrow = <span class="hljs-literal">TRUE</span>,<span class="hljs-built_in">dimnames</span> = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;r1&#x27;</span>,<span class="hljs-string">&#x27;r2&#x27;</span>,<span class="hljs-string">&#x27;r3&#x27;</span>),<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;c1&#x27;</span>,<span class="hljs-string">&#x27;c2&#x27;</span>,<span class="hljs-string">&#x27;c3&#x27;</span>)))<br><span class="hljs-comment"># R语言当中矩阵输入默认是按列的，可通过byrow参数修改，dimnames定义列名，行名，必须是一个列表类型</span><br></code></pre></div></td></tr></table></figure></li><li><p>运算</p><blockquote><p>索引与其他语言类似，如果定义了列（行）名，也可以通过列（行）名来索引</p><p>solver命令可以用来求逆矩阵</p><p>特征值和特征向量</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">eigen(m)<span class="hljs-comment"># 默认会同时输出特征值和特征向量</span><br>eigen(m)$values<span class="hljs-comment"># 加上$values只输出特征值，$:这个是别的编程语言没有接触过的</span><br></code></pre></div></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">t(m)<span class="hljs-comment"># 转置</span><br></code></pre></div></td></tr></table></figure><p>加减乘除都是对应元素位置相运算</p><p>合并和拼接操作：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cbind(a,b)<span class="hljs-comment"># 列合并</span><br>rbind(a,b)<span class="hljs-comment"># 行合并</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><ul><li><p>数组建立（三维）：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">array(<span class="hljs-number">1</span>:<span class="hljs-number">24</span>,<span class="hljs-built_in">c</span>(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<span class="hljs-comment"># 1:24为数据，2 为行数，3 为列数，4 为层数</span><br><span class="hljs-comment"># , , 1</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]    1    3    5</span><br><span class="hljs-comment"># [2,]    2    4    6</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 2</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]    7    9   11</span><br><span class="hljs-comment"># [2,]    8   10   12</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 3</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]   13   15   17</span><br><span class="hljs-comment"># [2,]   14   16   18</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 4</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]   19   21   23</span><br><span class="hljs-comment"># [2,]   20   22   24</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h3><ul><li><p>通过转换列表的形式建立数据框</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">list_1&lt;-<span class="hljs-built_in">list</span>(name = <span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;y1&#x27;</span>,<span class="hljs-string">&#x27;y2&#x27;</span>,<span class="hljs-string">&#x27;y3&#x27;</span>),age = <span class="hljs-built_in">c</span>(<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>))<span class="hljs-comment"># name、age 即为列名，</span><br>data.frame(list_1)<br><span class="hljs-comment">#           name age</span><br><span class="hljs-comment">#        1   y1  11</span><br><span class="hljs-comment">#        2   y2  22</span><br><span class="hljs-comment">#        3   y3  33</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>数据框的建立</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">no&lt;-<span class="hljs-number">1</span>:<span class="hljs-number">3</span><br>name&lt;-<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;n1&#x27;</span>,<span class="hljs-string">&#x27;n2&#x27;</span>,<span class="hljs-string">&#x27;n3&#x27;</span>)<br>score&lt;-<span class="hljs-number">77</span>:<span class="hljs-number">79</span><br>df = data.frame(no,name,score,row.names = <span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>))<span class="hljs-comment"># 可以通过row.names设置行名</span><br><span class="hljs-comment">#      no name score</span><br><span class="hljs-comment">#    a  1   n1    77</span><br><span class="hljs-comment">#    b  2   n2    78</span><br><span class="hljs-comment">#    c  3   n3    79</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>索引</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-comment"># 选取行</span><br>df[<span class="hljs-string">&#x27;a&#x27;</span>,]<span class="hljs-comment"># 设置了行名，可以直接通过行名进行选取(列选取同理)，等价于df[1,]</span><br>df[<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>),<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;no&#x27;</span>,<span class="hljs-string">&#x27;score&#x27;</span>)]<br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="时间和日期"><a href="#时间和日期" class="headerlink" title="时间和日期"></a>时间和日期</h3><ul><li><p>日期对象</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">now = as.Date(<span class="hljs-string">&quot;2021-03-19&quot;</span>)<span class="hljs-comment"># as.Date() 将其他对象转换为日期对象</span><br><span class="hljs-comment"># &gt; now</span><br><span class="hljs-comment"># [1] &quot;2021-03-19&quot;</span><br><span class="hljs-built_in">unclass</span>(now)<br><span class="hljs-comment"># [1] 18705# 计算now距离1970-01-01多少天</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间对象</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">now = Sys.time()<span class="hljs-comment"># 获取当前系统时间</span><br>t = as.POSIXlt(now)<span class="hljs-comment"># 将其转化为R中的时间格式</span><br><span class="hljs-comment">#    &gt; t</span><br><span class="hljs-comment">#    [1] &quot;2021-03-19 14:59:19 CST&quot;</span><br><span class="hljs-built_in">names</span>(<span class="hljs-built_in">unclass</span>(t))<span class="hljs-comment"># 输出R中的时间包含了哪些值，unclass(t) 输出的是什么呢？？？</span><br><span class="hljs-comment">#    [1] &quot;sec&quot;    &quot;min&quot;    &quot;hour&quot;   &quot;mday&quot;   &quot;mon&quot;    &quot;year&quot;   &quot;wday&quot;   &quot;yday&quot;  </span><br><span class="hljs-comment">#    [9] &quot;isdst&quot;  &quot;zone&quot;   &quot;gmtoff&quot;</span><br>t$<span class="hljs-string">&#x27;min&#x27;</span><span class="hljs-comment"># 取分钟的值</span><br><span class="hljs-comment"># [1] 59</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>日期转时间</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">date = as.Date(<span class="hljs-string">&#x27;2021-01-01&#x27;</span>)<span class="hljs-comment"># 创建一个日期</span><br>t = as.POSIXlt(date)<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间格式化</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">y &lt;-strptime(<span class="hljs-string">&quot;2006-01-08 10:07:52&quot;</span>, <span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br><span class="hljs-comment">#    &gt; y</span><br><span class="hljs-comment">#    [1] &quot;2006-01-08 10:07:52 CST&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间计算</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">x = as.Date(<span class="hljs-string">&quot;2021-02-01&quot;</span>)<br>y = as.Date(<span class="hljs-string">&quot;2021-03-19&quot;</span>)<br>y-x<br><span class="hljs-comment"># Time difference of 46 days</span><br>y+<span class="hljs-number">1</span><br><span class="hljs-comment"># [1] &quot;2021-03-20&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="二、数据输入输出"><a href="#二、数据输入输出" class="headerlink" title="二、数据输入输出"></a>二、数据输入输出</h2><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><ul><li><p>读取excel数据</p><ul><li>可以使用 openxlsx包中的read.xlsx函数</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">library(openxlsx)<span class="hljs-comment">#</span><br>read.xlsx(<span class="hljs-string">&quot;E:\\study\\office\\excel提高\\二级.xlsx&quot;</span>)<br><span class="hljs-comment"># \u65e5\u671f \u7535\u8111 \u624b\u673a      U\u76d8 \u76f8\u673a</span><br><span class="hljs-comment"># 1         43728         4500         1000           23          643</span><br><span class="hljs-comment"># 2         43729         4601         3000           45          242</span><br><span class="hljs-comment"># 3         43730         4702         2500           65          556</span><br><span class="hljs-comment"># 4         43731         5803         2200           42         1412</span><br><span class="hljs-comment"># 5         43732         4904         1200           77          225</span><br><span class="hljs-comment"># 6         43733         5505         1415           66          789</span><br><span class="hljs-comment"># 7  \u76f8\u673a         &lt;NA&gt;         &lt;NA&gt;         &lt;NA&gt;           NA</span><br><span class="hljs-comment"># 8  \u516c\u53f8 \u672c\u6708 \u4e0a\u6708 \u5347\u964d           NA</span><br><span class="hljs-comment"># 9             A          100           90           10           NA</span><br><span class="hljs-comment"># 10            B          150          180          -30           NA</span><br><span class="hljs-comment"># 11            C          250          200           50           NA</span><br><span class="hljs-comment"># 12            D          280          360          -80           NA</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li>读取之后出现编码问题，如何解决？解决方法：设置Excel的编码格式（在另存为-&gt;工具），在函数中传入encoding=‘utf-8’。ps：文件路径不能有中文！！</li></ul></li><li><p>读取csv数据</p></li><li><p>与读取excel类似。</p></li></ul><h3 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h3><ul><li><p>可以使用write.csv()函数，如我们要将R软件中的iris数据集保存到本地，可使用如下程序</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">write.csv(iris,<span class="hljs-string">&#x27;iris.csv&#x27;</span>) <span class="hljs-comment"># iris.csv 为文件名</span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="三、程序控制"><a href="#三、程序控制" class="headerlink" title="三、程序控制"></a>三、程序控制</h2><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><ul><li><p>与其他编程语言没有差别</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">x = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span>)&#123;<span class="hljs-comment"># 最好加上花括号，否则会出现：错误: 意外的&#x27;else&#x27; in &quot;else&quot;</span><br> print(<span class="hljs-string">&#x27;x&gt;0&#x27;</span>)<br>&#125;<span class="hljs-keyword">else</span> &#123;<br> print(<span class="hljs-string">&#x27;x&lt;0&#x27;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><ul><li><p>for：类似于java里面的增强for循环</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">set = <span class="hljs-number">1</span>:<span class="hljs-number">10</span><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> set) &#123;<br> print(i)<br>&#125;<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>while：循环与其他的无差别</p></li></ul><h3 id="apply-函数族"><a href="#apply-函数族" class="headerlink" title="apply 函数族"></a>apply 函数族</h3><ul><li><p>一些用于循环的函数，比普通的循环效率高</p></li><li><p>1、对列表的循环：lapply(列表名，函数名)，或者sapply</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">list_2 = <span class="hljs-built_in">list</span>(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>)<br>lapply(list_2,<span class="hljs-built_in">sum</span>)<span class="hljs-comment"># sum为循环的函数，可以自定义</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>2、对数据框、矩阵、数组等的循环：apply(矩阵或数组或数据框，margin，函数名)。margin为一个数字，当对象是矩阵时，1表示行，2表示列，也可以时列名</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">m = matrix(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,nrow = <span class="hljs-number">4</span>)<br><span class="hljs-comment">#         [,1] [,2] [,3] [,4] [,5]</span><br><span class="hljs-comment">#    [1,]    1    5    9   13   17</span><br><span class="hljs-comment">#    [2,]    2    6   10   14   18</span><br><span class="hljs-comment">#    [3,]    3    7   11   15   19</span><br><span class="hljs-comment">#    [4,]    4    8   12   16   20</span><br>apply(m,<span class="hljs-number">2</span>,mean)<span class="hljs-comment"># 对矩阵 m 每列求均值</span><br><span class="hljs-comment">#   2.5  6.5 10.5 14.5 18.5</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>3、对向量的子集进行循环控制：tapply(x，index，fun)</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">data&lt;-data.frame(x=<span class="hljs-built_in">c</span>(-<span class="hljs-number">0.6234743</span>,-<span class="hljs-number">0.4719858</span>,-<span class="hljs-number">1.871619</span>,<span class="hljs-number">0.545811</span>,<span class="hljs-number">0.4839098</span>,<br>                  <span class="hljs-number">0.7882512</span>,<span class="hljs-number">0.4481959</span>,<span class="hljs-number">0.8458964</span>,<span class="hljs-number">0.8737372</span>,<span class="hljs-number">0.05652524</span>,<br>                  -<span class="hljs-number">0.3543139</span>,<span class="hljs-number">1.641247</span>,<span class="hljs-number">0.3337766</span>,<span class="hljs-number">1.425203</span>,<span class="hljs-number">0.1899111</span>),<br>              group=<span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,each=<span class="hljs-number">5</span>))<br><span class="hljs-comment">#            x        group</span><br><span class="hljs-comment">#    1  -0.62347430     1</span><br><span class="hljs-comment">#    2  -0.47198580     1</span><br><span class="hljs-comment">#    3  -1.87161900     1</span><br><span class="hljs-comment">#    4   0.54581100     1</span><br><span class="hljs-comment">#    5   0.48390980     1</span><br><span class="hljs-comment">#    6   0.78825120     2</span><br><span class="hljs-comment">#    7   0.44819590     2</span><br><span class="hljs-comment">#    8   0.84589640     2</span><br><span class="hljs-comment">#    9   0.87373720     2</span><br><span class="hljs-comment">#    10  0.05652524     2</span><br><span class="hljs-comment">#    11 -0.35431390     3</span><br><span class="hljs-comment">#    12  1.64124700     3</span><br><span class="hljs-comment">#    13  0.33377660     3</span><br><span class="hljs-comment">#    14  1.42520300     3</span><br><span class="hljs-comment">#    15  0.18991110     3</span><br></code></pre></div></td></tr></table></figure><ul><li><p>对每组求均值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">tapply(data$x,data$group,mean)<span class="hljs-comment"># $ 符号用于取值</span><br><span class="hljs-comment">#         1          2          3 </span><br><span class="hljs-comment">#    -0.3874717  0.6025212  0.6471648 </span><br></code></pre></div></td></tr></table></figure></li><li><p>对每组求范围</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">tapply(data$x,data$group,<span class="hljs-built_in">range</span>)<br><span class="hljs-comment"># $`1`</span><br><span class="hljs-comment"># [1] -1.871619  0.545811</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`2`</span><br><span class="hljs-comment"># [1] 0.05652524 0.87373720</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`3`</span><br><span class="hljs-comment"># [1] -0.3543139  1.6412470</span><br></code></pre></div></td></tr></table></figure></li></ul></blockquote></li><li><p>4、split函数：分割集合</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">split(data$x,data$group)<br><span class="hljs-comment"># $`1`</span><br><span class="hljs-comment"># [1] -0.6234743 -0.4719858 -1.8716190  0.5458110  0.4839098</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`2`</span><br><span class="hljs-comment"># [1] 0.78825120 0.44819590 0.84589640 0.87373720 0.05652524</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`3`</span><br><span class="hljs-comment"># [1] -0.3543139  1.6412470  0.3337766  1.4252030  0.1899111</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="三、描述统计"><a href="#三、描述统计" class="headerlink" title="三、描述统计"></a>三、描述统计</h2><h3 id="变量类型、属性列表"><a href="#变量类型、属性列表" class="headerlink" title="变量类型、属性列表"></a>变量类型、属性列表</h3><ul><li>str函数：查看数据内部结构</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">str(accepts)<span class="hljs-comment"># 数据集来自accepts</span><br><span class="hljs-comment"># &#x27;data.frame&#x27;:5845 obs. of  24 variables:</span><br><span class="hljs-comment">#   $ application_id: int  2314049 63539 7328510 8725187 4275127 8712513 2063896 598458 1526052 8073975 ...</span><br><span class="hljs-comment"># $ account_number: int  11613 13449 14323 15359 15812 16979 17842 19715 23924 24866 ...</span><br><span class="hljs-comment"># $ bad_ind       : int  1 0 1 1 0 0 0 0 1 0 ...</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>attributes()函数：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">attributes</span>(Insurance)<br><span class="hljs-comment"># $names列名</span><br><span class="hljs-comment"># [1] &quot;District&quot; &quot;Group&quot;    &quot;Age&quot;      &quot;Holders&quot; </span><br><span class="hljs-comment"># [5] &quot;Claims&quot;  </span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $class 数据类型</span><br><span class="hljs-comment"># [1] &quot;data.frame&quot;</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $row.names行名</span><br><span class="hljs-comment"># [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17</span><br><span class="hljs-comment"># [18] 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</span><br><span class="hljs-comment"># [35] 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</span><br><span class="hljs-comment"># [52] 52 53 54 55 56 57 58 59 60 61 62 63 64</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>summary()函数：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(Insurance)<br><span class="hljs-comment"># District    Group       Age        Holders       </span><br><span class="hljs-comment"># 1:16     &lt;1l   :16   &lt;25  :16   Min.   :   3.00  </span><br><span class="hljs-comment"># 2:16     1-1.5l:16   25-29:16   1st Qu.:  46.75  </span><br><span class="hljs-comment"># 3:16     1.5-2l:16   30-35:16   Median : 136.00  </span><br><span class="hljs-comment"># 4:16     &gt;2l   :16   &gt;35  :16   Mean   : 364.98  </span><br><span class="hljs-comment"># 3rd Qu.: 327.50  </span><br><span class="hljs-comment"># Max.   :3582.00  </span><br><span class="hljs-comment"># Claims      </span><br><span class="hljs-comment"># Min.   :  0.00  </span><br><span class="hljs-comment"># 1st Qu.:  9.50  </span><br><span class="hljs-comment"># Median : 22.00  </span><br><span class="hljs-comment"># Mean   : 49.23  </span><br><span class="hljs-comment"># 3rd Qu.: 55.50  </span><br><span class="hljs-comment"># Max.   :400.00 </span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>其他</p><ul><li>获取更加详细的信息：Hmisc软件包中的describe()函数来获取</li><li>fBasics软件包中的basicStats()</li></ul></li></ul><h3 id="各种统计量"><a href="#各种统计量" class="headerlink" title="各种统计量"></a>各种统计量</h3><ul><li><p>频数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">pinshu = table(accepts$vehicle_year)<br><span class="hljs-comment"># 0 1977 1982 1985 1986 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 9999 </span><br><span class="hljs-comment"># 298    1    1    1    2    1    3   12   19   32   79  170  272  454  713  653 1045 2083    1    4 </span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>将上面的结果画成条形图</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">barplot(pinshu)<br></code></pre></div></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620200135827.png" alt="image-20210620200135827"></p></blockquote></li></ul></li><li><p>均值</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">mean(accepts$age_oldest_tr,na.rm = <span class="hljs-built_in">T</span>)<span class="hljs-comment"># na.rm = T 意思是去掉NA值</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>中位数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">median(accepts$purch_price,na.rm = <span class="hljs-built_in">T</span>)<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>分位数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">quantile(accepts$purch_price,probs = <span class="hljs-built_in">c</span>(<span class="hljs-number">0.25</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">0.75</span>,<span class="hljs-number">0.9</span>),na.rm = <span class="hljs-built_in">T</span>)<span class="hljs-comment"># probs设置分位数</span><br><span class="hljs-comment">#     25%      50%      75%      90% </span><br><span class="hljs-comment">#  12684.00 18017.75 24500.00 30813.45 </span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>相关系数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cor(Insurance$Holders,Insurance$Claims)<br><span class="hljs-comment"># [1] 0.9857701</span><br></code></pre></div></td></tr></table></figure><p>可以通过Ellipse软件包中的plotcorr()函数来绘制相关系数图</p></blockquote></li><li><p>其他</p><blockquote><p>方差：var</p><p>标准差：sd</p><p>峰度系数：skewness（timeDate包中）</p><p>偏度系数：kurtosis（timeDate包中）</p></blockquote></li></ul><h3 id="画各种统计图"><a href="#画各种统计图" class="headerlink" title="画各种统计图"></a>画各种统计图</h3><ul><li><p>直方图</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">hist(accepts$age_oldest_tr,nclass = <span class="hljs-number">5</span>)<span class="hljs-comment"># nclass = 5 说明只有5个区间，即5个条状</span><br></code></pre></div></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620200159425.png" alt="image-20210620200159425"></p></blockquote></li></ul><h2 id="四、数据处理"><a href="#四、数据处理" class="headerlink" title="四、数据处理"></a>四、数据处理</h2><h3 id="数据基本信息"><a href="#数据基本信息" class="headerlink" title="数据基本信息"></a>数据基本信息</h3><ul><li><p>维度</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">dim</span>(Insurance)<span class="hljs-comment"># Insurance为MASS包中的数据，需要导入MASS包,下面的数据都是基于Insurance操作的结果</span><br><span class="hljs-comment"># [1] 64  5# 64行5列</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>标题</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">names</span>(Insurance)<span class="hljs-comment"># 获取表头</span><br><span class="hljs-comment"># [1] &quot;District&quot; &quot;Group&quot;    &quot;Age&quot;      &quot;Holders&quot;  &quot;Claims&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>变量类型</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">class</span>(Insurance)<br><span class="hljs-comment"># [1] &quot;data.frame&quot;</span><br><span class="hljs-built_in">class</span>(Insurance$Age)<br><span class="hljs-comment"># [1] &quot;ordered&quot; &quot;factor&quot; </span><br><span class="hljs-built_in">class</span>(Insurance$Group)<br><span class="hljs-comment"># [1] &quot;ordered&quot; &quot;factor&quot; </span><br><span class="hljs-built_in">class</span>(Insurance$Claims)<br><span class="hljs-comment"># [1] &quot;integer&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>查看因子类型的水平（即值域）</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">levels(Insurance$Group)<span class="hljs-comment"># 输入的参数必须为 &quot;factor&quot; 类型</span><br><span class="hljs-comment"># [1] &quot;&lt;1l&quot;    &quot;1-1.5l&quot; &quot;1.5-2l&quot; &quot;&gt;2l&quot; </span><br>levels(Insurance$Age)<br><span class="hljs-comment"># [1] &quot;&lt;25&quot;   &quot;25-29&quot; &quot;30-35&quot; &quot;&gt;35&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><ul><li>数据类型的判断和转换</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">a = <span class="hljs-number">2.0</span><br><span class="hljs-built_in">is.integer</span>(a)<span class="hljs-comment"># 数据类型判断</span><br><span class="hljs-comment"># [1] FALSE</span><br>a = <span class="hljs-built_in">as.integer</span>(a)<span class="hljs-comment"># 数据转换</span><br><span class="hljs-built_in">is.integer</span>(a)<br><span class="hljs-comment"># [1] TRUE</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>缺失值查看</p><ol><li>缺失值可以用mice软件包中的md.pattern()函数来获取其中的缺失值分布状态</li></ol>  <figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(iris)<br> /\     /\<br>&#123;  `---&#x27;  &#125;<br>&#123;  O   O  &#125;<br>==&gt;  V &lt;==  No need for mice. This data set is completely observed.<br> \  \|/  /<br>  `-----<span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  </span><br><span class="hljs-string">150            1           1            1           1       1 0</span><br><span class="hljs-string">               0           0            0           0       0 0</span><br></code></pre></div></td></tr></table></figure><blockquote><p>最下面一行0可以看出iris数据集没有缺失值</p></blockquote><ol start="2"><li><p>再对mice包中的nhanes2数据集进行查看，有缺失值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(nhanes2)<br>   age hyp bmi chl   <br><span class="hljs-number">13</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>  <span class="hljs-number">0</span><br><span class="hljs-number">3</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span>  <span class="hljs-number">1</span><br><span class="hljs-number">1</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span>  <span class="hljs-number">1</span><br><span class="hljs-number">1</span>    <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span>  <span class="hljs-number">2</span><br><span class="hljs-number">7</span>    <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>  <span class="hljs-number">3</span><br>     <span class="hljs-number">0</span>   <span class="hljs-number">8</span>   <span class="hljs-number">9</span>  <span class="hljs-number">10</span> <span class="hljs-number">27</span><span class="hljs-comment"># 27为缺失值总数</span><br></code></pre></div></td></tr></table></figure><ul><li>用summary函数得到相同的结果</li></ul><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(nhanes2)<br>    age          bmi          hyp          chl       <br> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>:<span class="hljs-number">12</span>   Min.   :<span class="hljs-number">20.40</span>   no  :<span class="hljs-number">13</span>   Min.   :<span class="hljs-number">113.0</span>  <br> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>: <span class="hljs-number">7</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">22.65</span>   yes : <span class="hljs-number">4</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">185.0</span>  <br> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>: <span class="hljs-number">6</span>   Median :<span class="hljs-number">26.75</span>   <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s: 8   Median :187.0  </span><br><span class="hljs-string">            Mean   :26.56             Mean   :191.4  </span><br><span class="hljs-string">            3rd Qu.:28.93             3rd Qu.:212.0  </span><br><span class="hljs-string">            Max.   :35.30             Max.   :284.0  </span><br><span class="hljs-string">            NA&#x27;</span>s   :<span class="hljs-number">9</span>                 <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s   :10     </span><br></code></pre></div></td></tr></table></figure></li><li><p>其他查看是否有缺失值的方法：</p><ol><li>sum(is.na(nhanes2))</li><li>sum(complete.cases(nhanes2))     计算完整样本的数量</li></ol></li></ol></li><li><p>缺失值处理</p><ol><li><p>当缺失数据的比例较少，可以直接删除相对应的行数据</p></li><li><p>插补法：均值插补、抽样填补、回归插补、二阶插补、热平台、冷平台</p><ol><li><p>抽样插补：对nhanes2数据集的第二列的缺失值采用抽样插补：</p><ul><li><p>插补前的前几行数据：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">head(nhanes2)<br>    age  bmi  hyp chl<br><span class="hljs-number">1</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">2</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">22.7</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">3</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">5</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">20.4</span>   no <span class="hljs-number">113</span><br><span class="hljs-number">6</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br></code></pre></div></td></tr></table></figure></li><li><p>插补程序</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">2</span>])==<span class="hljs-literal">TRUE</span>)<span class="hljs-comment"># 得到那些行的第二列是缺失的</span><br>[<span class="hljs-number">1</span>]  <span class="hljs-number">1</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">6</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">16</span> <span class="hljs-number">21</span><br>data1 = nhanes2[-sub,]  <span class="hljs-comment"># 不存在缺失值的</span><br>data2 = nhanes2[sub,]  <span class="hljs-comment"># 存在缺失值的</span><br>data2<br>     age bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">3</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">6</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br>data2[,<span class="hljs-number">2</span>] = sample(data1[,<span class="hljs-number">2</span>],<span class="hljs-built_in">length</span>(data2[,<span class="hljs-number">2</span>]),replace = <span class="hljs-literal">TRUE</span>)   <span class="hljs-comment"># 从不存在缺失值的data1的第二列简单抽样，抽取的样本数为length(data2[,2]),replace = TRUE设置为放回抽样</span><br>data2<br>     age  bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">24.9</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">3</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">21.7</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">24.9</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">6</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">29.6</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">27.4</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">35.3</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">28.7</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">27.5</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">25.5</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br></code></pre></div></td></tr></table></figure></li></ul></li><li><p>均值插补：对nhanes2数据集的第四列的缺失值采用抽样插补：</p><ul><li><p>找到第四列存在缺失值的行标</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">4</span>])==<span class="hljs-literal">TRUE</span>)<br>&gt; sub<br> [<span class="hljs-number">1</span>]  <span class="hljs-number">1</span>  <span class="hljs-number">4</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span> <span class="hljs-number">20</span> <span class="hljs-number">21</span> <span class="hljs-number">24</span><br></code></pre></div></td></tr></table></figure></li><li><p>进行插补</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">4</span>])==<span class="hljs-literal">TRUE</span>)<br>&gt; data1 = nhanes2[-sub,]  <span class="hljs-comment"># 不存在缺失值的</span><br>&gt; data2 = nhanes2[sub,]  <span class="hljs-comment"># 存在缺失值的</span><br>&gt; data2[,<span class="hljs-number">4</span>] = sample(data1[,<span class="hljs-number">4</span>],<span class="hljs-built_in">length</span>(data2[,<span class="hljs-number">4</span>]),replace = <span class="hljs-literal">TRUE</span>)<br>&gt; data2<br>     age  bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">284</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">187</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">238</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">229</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">229</span><br><span class="hljs-number">15</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">29.6</span>   no <span class="hljs-number">284</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">284</span><br><span class="hljs-number">20</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">25.5</span>  yes <span class="hljs-number">218</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">206</span><br><span class="hljs-number">24</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">24.9</span>   no <span class="hljs-number">131</span><br></code></pre></div></td></tr></table></figure></li></ul></li></ol><ul><li><p>噪声数据处理（异常值处理）</p><blockquote><p>测量过程中的随机错误或偏差，包括错误值或偏离期望的孤立点值</p></blockquote><ul><li>利用outliers软件包的outlier函数可寻找噪声数据</li></ul></li><li><p>数据不一致处理：如日期的表示不一致</p></li></ul></li></ol></li></ul><h3 id="数据抽样"><a href="#数据抽样" class="headerlink" title="数据抽样"></a>数据抽样</h3><ul><li><p>随机抽样</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">50</span>,replace = <span class="hljs-literal">TRUE</span>)<span class="hljs-comment"># replace = TRUE 表示放回抽样，在1:20这20个数据中可放回抽样50个数据</span><br> <span class="hljs-comment">#  当replace = FALSE(默认) ，抽样个数不能多于样本个数</span><br><span class="hljs-comment"># [1] 10  4 19 20 10 12 10 10  9  9 11 18 20 16 13  5 11 18 18</span><br><span class="hljs-comment"># [20]  4 19 17 15 11  9  6 12  3 15  3 17 15  1  4  8 17  2 18</span><br><span class="hljs-comment"># [39] 15  9  6 10 10 10  1  8  4  7 20  6</span><br><br><span class="hljs-comment"># 设置样本抽到的概率值</span><br>sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">50</span>,replace = <span class="hljs-literal">TRUE</span>,prob = <span class="hljs-built_in">rep</span>(seq(<span class="hljs-number">0</span>,<span class="hljs-number">0.9</span>,<span class="hljs-number">0.1</span>),each = <span class="hljs-number">2</span>)) <span class="hljs-comment"># 样本所能被抽到的概率值如下</span><br><span class="hljs-comment"># 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20</span><br><span class="hljs-comment"># 0.0 0.0 0.1 0.1 0.2 0.2 0.3 0.3 0.4 0.4 0.5 0.5 0.6 0.6 0.7 0.7 0.8 0.8 0.9 0.9</span><br><span class="hljs-comment"># [1] 14 11 16 17 17 16 13 20 13 17 18 16 20 14  8 20 10 20 20</span><br><span class="hljs-comment"># [20]  9 17  9 12 19 19 20 19 16 16 14 19 13 12 19  6 20 12 11</span><br><span class="hljs-comment"># [39]  8  5 14 11 17 18 20 15 19 16 17 10</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>分层抽样</p><blockquote><p>分层抽样所用的函数在sampling包中，使用前应导包</p><p>分层抽样函数为：</p><p>strata(data,stratanames=NULL,size,method=c(“srswor”,”srswr”,”poisson”,”systematic”),pik,description=F)</p><p>data即为数据，stratanames中放置进行分层的变量名称；size用于设置抽样的样本数，一般按升序排。而method为选取抽样方法，分别•为无放回抽样、有放回抽样、泊松、系统抽样，默认去srswor,pik设置各层抽样概率，description为选择是否输出各层基本信息。</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">strata(Insurance,stratanames=<span class="hljs-string">&quot;District&quot;</span>,size=<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),method=<span class="hljs-string">&quot;srswor&quot;</span>)<br><span class="hljs-comment"># 在Insurance数据集中，以&quot;District&quot;列进行分层抽样，第一、二层抽1个数据，第三、四层抽2个数据</span><br><span class="hljs-comment"># District ID_unit   Prob Stratum</span><br><span class="hljs-comment"># 3         1       3 0.0625       1</span><br><span class="hljs-comment"># 26        2      26 0.0625       2</span><br><span class="hljs-comment"># 46        3      46 0.1250       3</span><br><span class="hljs-comment"># 48        3      48 0.1250       3</span><br><span class="hljs-comment"># 51        4      51 0.1250       4</span><br><span class="hljs-comment"># 52        4      52 0.1250       4</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>利用随机抽样生成稀疏矩阵</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">i = sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">10</span>);<br>j = sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">10</span>);<br>m = sparseMatrix(i,j,x=<span class="hljs-number">8</span>,dims=<span class="hljs-built_in">c</span>(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>))<br><span class="hljs-comment"># m</span><br><span class="hljs-comment"># 20 x 20 sparse Matrix of class &quot;dgCMatrix&quot;</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [1,] . . . . . . 8 . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [2,] . . . . . . . . . . 8 . . . . . . . . .</span><br><span class="hljs-comment"># [3,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [4,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [5,] . . . . . 8 . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [6,] . . . . . . . . . . . 8 . . . . . . . .</span><br><span class="hljs-comment"># [7,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [8,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [9,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [10,] . . . . . . . . . . . . 8 . . . . . . .</span><br><span class="hljs-comment"># [11,] . . . . . . . . . . . . . . . . . . . 8</span><br><span class="hljs-comment"># [12,] . . . . . . . . 8 . . . . . . . . . . .</span><br><span class="hljs-comment"># [13,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [14,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [15,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [16,] . . . . . . . . . . . . . . . . . 8 . .</span><br><span class="hljs-comment"># [17,] . . . . . . . . . . . . . . . . 8 . . .</span><br><span class="hljs-comment"># [18,] . . . . . . . . . . . . . . . . . . 8 .</span><br><span class="hljs-comment"># [19,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [20,] . . . . . . . . . . . . . . . . . . . .</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鸢尾花品种分类</title>
    <link href="/2021/06/20/%E9%B8%A2%E5%B0%BE%E8%8A%B1%E5%93%81%E7%A7%8D%E5%88%86%E7%B1%BB/"/>
    <url>/2021/06/20/%E9%B8%A2%E5%B0%BE%E8%8A%B1%E5%93%81%E7%A7%8D%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="鸢尾花品种分类"><a href="#鸢尾花品种分类" class="headerlink" title="鸢尾花品种分类"></a>鸢尾花品种分类</h1><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><ul><li><p>维度</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">dim</span>(iris)<br>[<span class="hljs-number">1</span>] <span class="hljs-number">150</span>   <span class="hljs-number">5</span><br></code></pre></div></td></tr></table></figure></li><li><p>各字段值（变量）概况</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(iris)<br>  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width          Species  <br> Min.   :<span class="hljs-number">4.300</span>   Min.   :<span class="hljs-number">2.000</span>   Min.   :<span class="hljs-number">1.000</span>   Min.   :<span class="hljs-number">0.100</span>   setosa    :<span class="hljs-number">50</span>  <br> <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">5.100</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">2.800</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">1.600</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">0.300</span>   versicolor:<span class="hljs-number">50</span>  <br> Median :<span class="hljs-number">5.800</span>   Median :<span class="hljs-number">3.000</span>   Median :<span class="hljs-number">4.350</span>   Median :<span class="hljs-number">1.300</span>   virginica :<span class="hljs-number">50</span>  <br> Mean   :<span class="hljs-number">5.843</span>   Mean   :<span class="hljs-number">3.057</span>   Mean   :<span class="hljs-number">3.758</span>   Mean   :<span class="hljs-number">1.199</span>                  <br> <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">6.400</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">3.300</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">5.100</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">1.800</span>                  <br> Max.   :<span class="hljs-number">7.900</span>   Max.   :<span class="hljs-number">4.400</span>   Max.   :<span class="hljs-number">6.900</span>   Max.   :<span class="hljs-number">2.500</span><br></code></pre></div></td></tr></table></figure><ul><li>注：Sepal为萼片，Petal为花瓣，1st Qu.四分之一分位数，3rd Qu四分之三分位数</li><li>可以通过均值和中位数这两个指标值得差异程度来判断数据得偏倚程度，当两者相差过大，往往说明数据具有明显的右偏或左偏情况。</li></ul></li><li><p>缺失值查看</p><ol><li><p>通过mice软件包的md.pattern()函数发现不存在缺失值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(iris)<br> /\     /\<br>&#123;  `---&#x27;  &#125;<br>&#123;  O   O  &#125;<br>==&gt;  V &lt;==  No need for mice. This data set is completely observed.<br> \  \|/  /<br>  `-----<span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  </span><br><span class="hljs-string">150            1           1            1           1       1 0</span><br><span class="hljs-string">               0           0            0           0       0 0</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过Hmisc软件包的describe函数也得到相同的结果</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">describe(iris)<br>iris <br><br> <span class="hljs-number">5</span>  Variables      <span class="hljs-number">150</span>  Observations<br>----------------------------------------------------------------------------------------------------<br>Sepal.Length <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">35</span>    <span class="hljs-number">0.998</span>    <span class="hljs-number">5.843</span>   <span class="hljs-number">0.9462</span>    <span class="hljs-number">4.600</span>    <span class="hljs-number">4.800</span>    <span class="hljs-number">5.100</span>    <span class="hljs-number">5.800</span>    <span class="hljs-number">6.400</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>   <span class="hljs-number">6.900</span>    <span class="hljs-number">7.255</span> <br><br>lowest : <span class="hljs-number">4.3</span> <span class="hljs-number">4.4</span> <span class="hljs-number">4.5</span> <span class="hljs-number">4.6</span> <span class="hljs-number">4.7</span>, highest: <span class="hljs-number">7.3</span> <span class="hljs-number">7.4</span> <span class="hljs-number">7.6</span> <span class="hljs-number">7.7</span> <span class="hljs-number">7.9</span><br>----------------------------------------------------------------------------------------------------<br>Sepal.Width <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">23</span>    <span class="hljs-number">0.992</span>    <span class="hljs-number">3.057</span>   <span class="hljs-number">0.4872</span>    <span class="hljs-number">2.345</span>    <span class="hljs-number">2.500</span>    <span class="hljs-number">2.800</span>    <span class="hljs-number">3.000</span>    <span class="hljs-number">3.300</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>   <span class="hljs-number">3.610</span>    <span class="hljs-number">3.800</span> <br><br>lowest : <span class="hljs-number">2.0</span> <span class="hljs-number">2.2</span> <span class="hljs-number">2.3</span> <span class="hljs-number">2.4</span> <span class="hljs-number">2.5</span>, highest: <span class="hljs-number">3.9</span> <span class="hljs-number">4.0</span> <span class="hljs-number">4.1</span> <span class="hljs-number">4.2</span> <span class="hljs-number">4.4</span><br>----------------------------------------------------------------------------------------------------<br>Petal.Length <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">43</span>    <span class="hljs-number">0.998</span>    <span class="hljs-number">3.758</span>    <span class="hljs-number">1.979</span>     <span class="hljs-number">1.30</span>     <span class="hljs-number">1.40</span>     <span class="hljs-number">1.60</span>     <span class="hljs-number">4.35</span>     <span class="hljs-number">5.10</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>    <span class="hljs-number">5.80</span>     <span class="hljs-number">6.10</span> <br><br>lowest : <span class="hljs-number">1.0</span> <span class="hljs-number">1.1</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.3</span> <span class="hljs-number">1.4</span>, highest: <span class="hljs-number">6.3</span> <span class="hljs-number">6.4</span> <span class="hljs-number">6.6</span> <span class="hljs-number">6.7</span> <span class="hljs-number">6.9</span><br>----------------------------------------------------------------------------------------------------<br>Petal.Width <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">22</span>     <span class="hljs-number">0.99</span>    <span class="hljs-number">1.199</span>   <span class="hljs-number">0.8676</span>      <span class="hljs-number">0.2</span>      <span class="hljs-number">0.2</span>      <span class="hljs-number">0.3</span>      <span class="hljs-number">1.3</span>      <span class="hljs-number">1.8</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>     <span class="hljs-number">2.2</span>      <span class="hljs-number">2.3</span> <br><br>lowest : <span class="hljs-number">0.1</span> <span class="hljs-number">0.2</span> <span class="hljs-number">0.3</span> <span class="hljs-number">0.4</span> <span class="hljs-number">0.5</span>, highest: <span class="hljs-number">2.1</span> <span class="hljs-number">2.2</span> <span class="hljs-number">2.3</span> <span class="hljs-number">2.4</span> <span class="hljs-number">2.5</span><br>----------------------------------------------------------------------------------------------------<br>Species <br>       n  <span class="hljs-built_in">missing</span> distinct <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>        <span class="hljs-number">3</span> <br>                                           <br>Value          setosa versicolor  virginica<br>Frequency          <span class="hljs-number">50</span>         <span class="hljs-number">50</span>         <span class="hljs-number">50</span><br>Proportion      <span class="hljs-number">0.333</span>      <span class="hljs-number">0.333</span>      <span class="hljs-number">0.333</span><br>----------------------------------------------------------------------------------------------------<br></code></pre></div></td></tr></table></figure></li></ol></li></ul><h2 id="鸢尾花各属性相关性分析"><a href="#鸢尾花各属性相关性分析" class="headerlink" title="鸢尾花各属性相关性分析"></a>鸢尾花各属性相关性分析</h2><ul><li><p>通过cor()函数得到萼片长度、萼片宽度、花瓣长度、花瓣宽度的相关系数矩阵</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cor(iris[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>])<br>             Sepal.Length Sepal.Width Petal.Length Petal.Width<br>Sepal.Length    <span class="hljs-number">1.0000000</span>  -<span class="hljs-number">0.1175698</span>    <span class="hljs-number">0.8717538</span>   <span class="hljs-number">0.8179411</span><br>Sepal.Width    -<span class="hljs-number">0.1175698</span>   <span class="hljs-number">1.0000000</span>   -<span class="hljs-number">0.4284401</span>  -<span class="hljs-number">0.3661259</span><br>Petal.Length    <span class="hljs-number">0.8717538</span>  -<span class="hljs-number">0.4284401</span>    <span class="hljs-number">1.0000000</span>   <span class="hljs-number">0.9628654</span><br>Petal.Width     <span class="hljs-number">0.8179411</span>  -<span class="hljs-number">0.3661259</span>    <span class="hljs-number">0.9628654</span>   <span class="hljs-number">1.0000000</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过corrplot包中的corrplot()函数进行相关系数的可视化，得到相关系数图</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">corrplot(corr,method = <span class="hljs-string">&quot;circle&quot;</span>,addCoef.col = <span class="hljs-string">&quot;red&quot;</span>)<br></code></pre></div></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620190150156.png" alt="相关系数图"></p><ul><li>从上图可以看出花瓣宽度与花瓣长度有很强的相关性（相关系数为0.96），萼片长度与花瓣长度、花瓣宽度有较强的相关性（相关系数分别为0.87，0.82）</li></ul></li></ul><h2 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h2><ul><li><p>目的：对鸢尾花数据集的前四列进行聚类，通过第五列的品种看聚类是否对相同品种的花聚到了一起</p></li><li><p>移除第五列（将第五取出起名为species）</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">species = iris[,<span class="hljs-number">5</span>]<br>iris_1 = iris[,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br></code></pre></div></td></tr></table></figure></li><li><p>通过k均值聚类</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">km1 = kmeans(iris_1,centers = <span class="hljs-number">3</span>)<span class="hljs-comment"># 聚三类</span><br></code></pre></div></td></tr></table></figure><blockquote><p>结果：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">K-means clustering with <span class="hljs-number">3</span> clusters of sizes <span class="hljs-number">38</span>, <span class="hljs-number">62</span>, <span class="hljs-number">50</span><br><br>Cluster means:<br>  Sepal.Length Sepal.Width Petal.Length Petal.Width<br><span class="hljs-number">1</span>     <span class="hljs-number">6.850000</span>    <span class="hljs-number">3.073684</span>     <span class="hljs-number">5.742105</span>    <span class="hljs-number">2.071053</span><br><span class="hljs-number">2</span>     <span class="hljs-number">5.901613</span>    <span class="hljs-number">2.748387</span>     <span class="hljs-number">4.393548</span>    <span class="hljs-number">1.433871</span><br><span class="hljs-number">3</span>     <span class="hljs-number">5.006000</span>    <span class="hljs-number">3.428000</span>     <span class="hljs-number">1.462000</span>    <span class="hljs-number">0.246000</span><br><br>Clustering vector:<br>  [<span class="hljs-number">1</span>] <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span><br> [<span class="hljs-number">32</span>] <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span><br> [<span class="hljs-number">63</span>] <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span><br> [<span class="hljs-number">94</span>] <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span><br>[<span class="hljs-number">125</span>] <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span><br><br>Within cluster <span class="hljs-built_in">sum</span> of squares by cluster:<br>[<span class="hljs-number">1</span>] <span class="hljs-number">23.87947</span> <span class="hljs-number">39.82097</span> <span class="hljs-number">15.15100</span><br> (between_SS / total_SS =  <span class="hljs-number">88.4</span> %)<br><br>Available components:<br><br>[1] &quot;cluster&quot;      &quot;centers&quot;      &quot;totss&quot;        &quot;withinss&quot;    <br>[5] &quot;tot.withinss&quot; &quot;betweenss&quot;    &quot;size&quot;         &quot;iter&quot;        <br>[9] &quot;ifault&quot; <br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>输出聚类结果与原始品种的对比表</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">table(species,km1$cluster)<br>            <br>species       <span class="hljs-number">1</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span><br>  setosa      <span class="hljs-number">0</span>  <span class="hljs-number">0</span> <span class="hljs-number">50</span><br>  versicolor  <span class="hljs-number">2</span> <span class="hljs-number">48</span>  <span class="hljs-number">0</span><br>  virginica  <span class="hljs-number">36</span> <span class="hljs-number">14</span>  <span class="hljs-number">0</span><br></code></pre></div></td></tr></table></figure><blockquote><p>从表中可以看出setosa与另外两种花能够很好的区分开，而virginica这个品种的花则较难区分，有36个数据被分到第一类，有14个被分到第二类。</p></blockquote></li><li><p>画出聚类图</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub=which(km1$cluster==<span class="hljs-number">1</span>)<br>color = km1$cluster<br>color[sub] = <span class="hljs-string">&#x27;red&#x27;</span><br>sub=which(km1$cluster==<span class="hljs-number">2</span>)<br>color[sub] = <span class="hljs-string">&#x27;yellow&#x27;</span><br>sub=which(km1$cluster==<span class="hljs-number">3</span>)<br>color[sub] = <span class="hljs-string">&#x27;black&#x27;</span><br><span class="hljs-comment"># 以上代码只是修改数据点的颜色</span><br>plot(iris_1[<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;Sepal.Length&quot;</span>, <span class="hljs-string">&quot;Sepal.Width&quot;</span>)],col = color)<br>points(km1$centers[,<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;Sepal.Length&quot;</span>, <span class="hljs-string">&quot;Sepal.Width&quot;</span>)], col = <span class="hljs-number">1</span>:<span class="hljs-number">3</span>, pch = <span class="hljs-number">8</span>, cex=<span class="hljs-number">4</span>) <span class="hljs-comment"># 标出中心点</span><br></code></pre></div></td></tr></table></figure></li><li><p>结果图</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620214452613.png" alt="聚类结果图"></p></li><li><p>结果分析</p><blockquote><p>从图中可以看出，黑色的点与黄色和红色没有什么交集，而红色与黄色有相交的部分，与上面的分析一致</p></blockquote></li></ul><h2 id="iris数据集"><a href="#iris数据集" class="headerlink" title="iris数据集"></a>iris数据集</h2><table><thead><tr><th></th><th>Sepal.Length</th><th>Sepal.Width</th><th>Petal.Length</th><th>Petal.Width</th><th align="center">Species</th></tr></thead><tbody><tr><td>1</td><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>2</td><td>4.9</td><td>3</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>3</td><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>4</td><td>4.6</td><td>3.1</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>5</td><td>5</td><td>3.6</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>6</td><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>7</td><td>4.6</td><td>3.4</td><td>1.4</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>8</td><td>5</td><td>3.4</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>9</td><td>4.4</td><td>2.9</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>10</td><td>4.9</td><td>3.1</td><td>1.5</td><td>0.1</td><td align="center">setosa</td></tr><tr><td>11</td><td>5.4</td><td>3.7</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>12</td><td>4.8</td><td>3.4</td><td>1.6</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>13</td><td>4.8</td><td>3</td><td>1.4</td><td>0.1</td><td align="center">setosa</td></tr><tr><td>14</td><td>4.3</td><td>3</td><td>1.1</td><td>0.1</td><td align="center">setosa</td></tr><tr><td>15</td><td>5.8</td><td>4</td><td>1.2</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>16</td><td>5.7</td><td>4.4</td><td>1.5</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>17</td><td>5.4</td><td>3.9</td><td>1.3</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>18</td><td>5.1</td><td>3.5</td><td>1.4</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>19</td><td>5.7</td><td>3.8</td><td>1.7</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>20</td><td>5.1</td><td>3.8</td><td>1.5</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>21</td><td>5.4</td><td>3.4</td><td>1.7</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>22</td><td>5.1</td><td>3.7</td><td>1.5</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>23</td><td>4.6</td><td>3.6</td><td>1</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>24</td><td>5.1</td><td>3.3</td><td>1.7</td><td>0.5</td><td align="center">setosa</td></tr><tr><td>25</td><td>4.8</td><td>3.4</td><td>1.9</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>26</td><td>5</td><td>3</td><td>1.6</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>27</td><td>5</td><td>3.4</td><td>1.6</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>28</td><td>5.2</td><td>3.5</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>29</td><td>5.2</td><td>3.4</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>30</td><td>4.7</td><td>3.2</td><td>1.6</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>31</td><td>4.8</td><td>3.1</td><td>1.6</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>32</td><td>5.4</td><td>3.4</td><td>1.5</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>33</td><td>5.2</td><td>4.1</td><td>1.5</td><td>0.1</td><td align="center">setosa</td></tr><tr><td>34</td><td>5.5</td><td>4.2</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>35</td><td>4.9</td><td>3.1</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>36</td><td>5</td><td>3.2</td><td>1.2</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>37</td><td>5.5</td><td>3.5</td><td>1.3</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>38</td><td>4.9</td><td>3.6</td><td>1.4</td><td>0.1</td><td align="center">setosa</td></tr><tr><td>39</td><td>4.4</td><td>3</td><td>1.3</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>40</td><td>5.1</td><td>3.4</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>41</td><td>5</td><td>3.5</td><td>1.3</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>42</td><td>4.5</td><td>2.3</td><td>1.3</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>43</td><td>4.4</td><td>3.2</td><td>1.3</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>44</td><td>5</td><td>3.5</td><td>1.6</td><td>0.6</td><td align="center">setosa</td></tr><tr><td>45</td><td>5.1</td><td>3.8</td><td>1.9</td><td>0.4</td><td align="center">setosa</td></tr><tr><td>46</td><td>4.8</td><td>3</td><td>1.4</td><td>0.3</td><td align="center">setosa</td></tr><tr><td>47</td><td>5.1</td><td>3.8</td><td>1.6</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>48</td><td>4.6</td><td>3.2</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>49</td><td>5.3</td><td>3.7</td><td>1.5</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>50</td><td>5</td><td>3.3</td><td>1.4</td><td>0.2</td><td align="center">setosa</td></tr><tr><td>51</td><td>7</td><td>3.2</td><td>4.7</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>52</td><td>6.4</td><td>3.2</td><td>4.5</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>53</td><td>6.9</td><td>3.1</td><td>4.9</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>54</td><td>5.5</td><td>2.3</td><td>4</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>55</td><td>6.5</td><td>2.8</td><td>4.6</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>56</td><td>5.7</td><td>2.8</td><td>4.5</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>57</td><td>6.3</td><td>3.3</td><td>4.7</td><td>1.6</td><td align="center">versicolor</td></tr><tr><td>58</td><td>4.9</td><td>2.4</td><td>3.3</td><td>1</td><td align="center">versicolor</td></tr><tr><td>59</td><td>6.6</td><td>2.9</td><td>4.6</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>60</td><td>5.2</td><td>2.7</td><td>3.9</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>61</td><td>5</td><td>2</td><td>3.5</td><td>1</td><td align="center">versicolor</td></tr><tr><td>62</td><td>5.9</td><td>3</td><td>4.2</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>63</td><td>6</td><td>2.2</td><td>4</td><td>1</td><td align="center">versicolor</td></tr><tr><td>64</td><td>6.1</td><td>2.9</td><td>4.7</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>65</td><td>5.6</td><td>2.9</td><td>3.6</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>66</td><td>6.7</td><td>3.1</td><td>4.4</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>67</td><td>5.6</td><td>3</td><td>4.5</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>68</td><td>5.8</td><td>2.7</td><td>4.1</td><td>1</td><td align="center">versicolor</td></tr><tr><td>69</td><td>6.2</td><td>2.2</td><td>4.5</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>70</td><td>5.6</td><td>2.5</td><td>3.9</td><td>1.1</td><td align="center">versicolor</td></tr><tr><td>71</td><td>5.9</td><td>3.2</td><td>4.8</td><td>1.8</td><td align="center">versicolor</td></tr><tr><td>72</td><td>6.1</td><td>2.8</td><td>4</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>73</td><td>6.3</td><td>2.5</td><td>4.9</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>74</td><td>6.1</td><td>2.8</td><td>4.7</td><td>1.2</td><td align="center">versicolor</td></tr><tr><td>75</td><td>6.4</td><td>2.9</td><td>4.3</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>76</td><td>6.6</td><td>3</td><td>4.4</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>77</td><td>6.8</td><td>2.8</td><td>4.8</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>78</td><td>6.7</td><td>3</td><td>5</td><td>1.7</td><td align="center">versicolor</td></tr><tr><td>79</td><td>6</td><td>2.9</td><td>4.5</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>80</td><td>5.7</td><td>2.6</td><td>3.5</td><td>1</td><td align="center">versicolor</td></tr><tr><td>81</td><td>5.5</td><td>2.4</td><td>3.8</td><td>1.1</td><td align="center">versicolor</td></tr><tr><td>82</td><td>5.5</td><td>2.4</td><td>3.7</td><td>1</td><td align="center">versicolor</td></tr><tr><td>83</td><td>5.8</td><td>2.7</td><td>3.9</td><td>1.2</td><td align="center">versicolor</td></tr><tr><td>84</td><td>6</td><td>2.7</td><td>5.1</td><td>1.6</td><td align="center">versicolor</td></tr><tr><td>85</td><td>5.4</td><td>3</td><td>4.5</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>86</td><td>6</td><td>3.4</td><td>4.5</td><td>1.6</td><td align="center">versicolor</td></tr><tr><td>87</td><td>6.7</td><td>3.1</td><td>4.7</td><td>1.5</td><td align="center">versicolor</td></tr><tr><td>88</td><td>6.3</td><td>2.3</td><td>4.4</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>89</td><td>5.6</td><td>3</td><td>4.1</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>90</td><td>5.5</td><td>2.5</td><td>4</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>91</td><td>5.5</td><td>2.6</td><td>4.4</td><td>1.2</td><td align="center">versicolor</td></tr><tr><td>92</td><td>6.1</td><td>3</td><td>4.6</td><td>1.4</td><td align="center">versicolor</td></tr><tr><td>93</td><td>5.8</td><td>2.6</td><td>4</td><td>1.2</td><td align="center">versicolor</td></tr><tr><td>94</td><td>5</td><td>2.3</td><td>3.3</td><td>1</td><td align="center">versicolor</td></tr><tr><td>95</td><td>5.6</td><td>2.7</td><td>4.2</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>96</td><td>5.7</td><td>3</td><td>4.2</td><td>1.2</td><td align="center">versicolor</td></tr><tr><td>97</td><td>5.7</td><td>2.9</td><td>4.2</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>98</td><td>6.2</td><td>2.9</td><td>4.3</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>99</td><td>5.1</td><td>2.5</td><td>3</td><td>1.1</td><td align="center">versicolor</td></tr><tr><td>100</td><td>5.7</td><td>2.8</td><td>4.1</td><td>1.3</td><td align="center">versicolor</td></tr><tr><td>101</td><td>6.3</td><td>3.3</td><td>6</td><td>2.5</td><td align="center">virginica</td></tr><tr><td>102</td><td>5.8</td><td>2.7</td><td>5.1</td><td>1.9</td><td align="center">virginica</td></tr><tr><td>103</td><td>7.1</td><td>3</td><td>5.9</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>104</td><td>6.3</td><td>2.9</td><td>5.6</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>105</td><td>6.5</td><td>3</td><td>5.8</td><td>2.2</td><td align="center">virginica</td></tr><tr><td>106</td><td>7.6</td><td>3</td><td>6.6</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>107</td><td>4.9</td><td>2.5</td><td>4.5</td><td>1.7</td><td align="center">virginica</td></tr><tr><td>108</td><td>7.3</td><td>2.9</td><td>6.3</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>109</td><td>6.7</td><td>2.5</td><td>5.8</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>110</td><td>7.2</td><td>3.6</td><td>6.1</td><td>2.5</td><td align="center">virginica</td></tr><tr><td>111</td><td>6.5</td><td>3.2</td><td>5.1</td><td>2</td><td align="center">virginica</td></tr><tr><td>112</td><td>6.4</td><td>2.7</td><td>5.3</td><td>1.9</td><td align="center">virginica</td></tr><tr><td>113</td><td>6.8</td><td>3</td><td>5.5</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>114</td><td>5.7</td><td>2.5</td><td>5</td><td>2</td><td align="center">virginica</td></tr><tr><td>115</td><td>5.8</td><td>2.8</td><td>5.1</td><td>2.4</td><td align="center">virginica</td></tr><tr><td>116</td><td>6.4</td><td>3.2</td><td>5.3</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>117</td><td>6.5</td><td>3</td><td>5.5</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>118</td><td>7.7</td><td>3.8</td><td>6.7</td><td>2.2</td><td align="center">virginica</td></tr><tr><td>119</td><td>7.7</td><td>2.6</td><td>6.9</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>120</td><td>6</td><td>2.2</td><td>5</td><td>1.5</td><td align="center">virginica</td></tr><tr><td>121</td><td>6.9</td><td>3.2</td><td>5.7</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>122</td><td>5.6</td><td>2.8</td><td>4.9</td><td>2</td><td align="center">virginica</td></tr><tr><td>123</td><td>7.7</td><td>2.8</td><td>6.7</td><td>2</td><td align="center">virginica</td></tr><tr><td>124</td><td>6.3</td><td>2.7</td><td>4.9</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>125</td><td>6.7</td><td>3.3</td><td>5.7</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>126</td><td>7.2</td><td>3.2</td><td>6</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>127</td><td>6.2</td><td>2.8</td><td>4.8</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>128</td><td>6.1</td><td>3</td><td>4.9</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>129</td><td>6.4</td><td>2.8</td><td>5.6</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>130</td><td>7.2</td><td>3</td><td>5.8</td><td>1.6</td><td align="center">virginica</td></tr><tr><td>131</td><td>7.4</td><td>2.8</td><td>6.1</td><td>1.9</td><td align="center">virginica</td></tr><tr><td>132</td><td>7.9</td><td>3.8</td><td>6.4</td><td>2</td><td align="center">virginica</td></tr><tr><td>133</td><td>6.4</td><td>2.8</td><td>5.6</td><td>2.2</td><td align="center">virginica</td></tr><tr><td>134</td><td>6.3</td><td>2.8</td><td>5.1</td><td>1.5</td><td align="center">virginica</td></tr><tr><td>135</td><td>6.1</td><td>2.6</td><td>5.6</td><td>1.4</td><td align="center">virginica</td></tr><tr><td>136</td><td>7.7</td><td>3</td><td>6.1</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>137</td><td>6.3</td><td>3.4</td><td>5.6</td><td>2.4</td><td align="center">virginica</td></tr><tr><td>138</td><td>6.4</td><td>3.1</td><td>5.5</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>139</td><td>6</td><td>3</td><td>4.8</td><td>1.8</td><td align="center">virginica</td></tr><tr><td>140</td><td>6.9</td><td>3.1</td><td>5.4</td><td>2.1</td><td align="center">virginica</td></tr><tr><td>141</td><td>6.7</td><td>3.1</td><td>5.6</td><td>2.4</td><td align="center">virginica</td></tr><tr><td>142</td><td>6.9</td><td>3.1</td><td>5.1</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>143</td><td>5.8</td><td>2.7</td><td>5.1</td><td>1.9</td><td align="center">virginica</td></tr><tr><td>144</td><td>6.8</td><td>3.2</td><td>5.9</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>145</td><td>6.7</td><td>3.3</td><td>5.7</td><td>2.5</td><td align="center">virginica</td></tr><tr><td>146</td><td>6.7</td><td>3</td><td>5.2</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>147</td><td>6.3</td><td>2.5</td><td>5</td><td>1.9</td><td align="center">virginica</td></tr><tr><td>148</td><td>6.5</td><td>3</td><td>5.2</td><td>2</td><td align="center">virginica</td></tr><tr><td>149</td><td>6.2</td><td>3.4</td><td>5.4</td><td>2.3</td><td align="center">virginica</td></tr><tr><td>150</td><td>5.9</td><td>3</td><td>5.1</td><td>1.8</td><td align="center">virginica</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库概述</title>
    <link href="/2021/06/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
    <url>/2021/06/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库系统概述"><a href="#数据库系统概述" class="headerlink" title="数据库系统概述"></a>数据库系统概述</h1><h2 id="四个基本概念："><a href="#四个基本概念：" class="headerlink" title="四个基本概念："></a>四个基本概念：</h2><ul><li>数据（Data）：描述事物的符号记录</li></ul><ul><li><p>数据库（Database）：数据的集合</p><blockquote><p>数据按一定的数据模型组织、描述和出错</p><p>可为各种用户共享</p><p>冗余度较小，什么是冗余？</p><p>数据独立性较高</p><p>易扩展</p></blockquote></li><li><p>数据库管理系统（DBMS）：一个图形化界面，一个方便用户管理数据库的软件</p><blockquote><p>数据定义功能</p><p>数据组织、存储和管理</p><p>数据操纵功能</p><p>数据库的事务管理和运行管理</p><p>数据库的建立和维护功能</p><p>其他</p></blockquote></li><li><p>数据库系统(DBS) ：由数据库、数据库管理系统、应用程序和数据库管理员组成的存储、管理、处理和维护数据的系统      </p></li></ul><h2 id="三个发展阶段"><a href="#三个发展阶段" class="headerlink" title="三个发展阶段"></a>三个发展阶段</h2><ul><li><p>人工管理阶段：20世纪50年代中期以前</p></li><li><p>文件系统阶段：20世纪50年代后期到60年代中期</p></li><li><p>数据库系统阶段：20世纪60年代后期到现在</p><blockquote><p>主要特征：</p><blockquote><p>数据结构化</p><p>数据的共享性高、冗余度低且易扩充</p><p>数据独立性高</p><p>数据由数据库管理系统统一管理和控制</p><blockquote><p>安全性保护</p><p>完整性检查</p><p>并发控制</p><p>数据库恢复</p></blockquote></blockquote></blockquote></li></ul><h2 id="数据模型：对现实世界数据特征的抽象"><a href="#数据模型：对现实世界数据特征的抽象" class="headerlink" title="数据模型：对现实世界数据特征的抽象"></a>数据模型：对现实世界数据特征的抽象</h2><h3 id="数据模型组成要素"><a href="#数据模型组成要素" class="headerlink" title="数据模型组成要素"></a>数据模型组成要素</h3><ul><li>数据结构：描述数据库的组成对象以及对象之间的练习</li><li>数据操作：增删改查</li><li>数据的完整性约束条件</li></ul><h3 id="第一类、概念模型：将现实世界抽象为信息世界"><a href="#第一类、概念模型：将现实世界抽象为信息世界" class="headerlink" title="第一类、概念模型：将现实世界抽象为信息世界"></a>第一类、概念模型：将现实世界抽象为信息世界</h3><ul><li><p>一些重要概念：</p><blockquote><p>实体：如人，事，物</p><p>属性：实体所具有的特性，如人的姓名，年龄等</p><p>码：唯一标识实体的属性，即主键，如人的身份证号码</p><p>实体性：用实体名及其属性名集合来抽象和刻画同类实体，如，人（姓名，年龄，性别，出生年月）</p><p>实体集：同一类型实体的集合</p><p>联系：通常指不同实体集之间的联系</p><blockquote><p>一对一</p><p>一对多</p><p>多对多</p></blockquote></blockquote></li><li><p>概念模型的表示方法（表现形式）：E-R图</p></li></ul><h3 id="第二类、逻辑模型和物理模型"><a href="#第二类、逻辑模型和物理模型" class="headerlink" title="第二类、逻辑模型和物理模型"></a>第二类、逻辑模型和物理模型</h3><h4 id="逻辑模型：指关系"><a href="#逻辑模型：指关系" class="headerlink" title="逻辑模型：指关系"></a>逻辑模型：指关系</h4><ul><li><p>层次模型：类似一棵倒立的树</p></li><li><p>网状模型：类似一张图</p></li><li><p>关系模型：类似一张二维表格，由行和列组成</p><blockquote><p>关系模型的数据结构</p><blockquote><p>关系</p><p>元祖</p><p>属性</p><p>码</p><p>域：取值范围</p><p><strong>分量</strong> ：元祖中的一个属性值，它是不能再分的</p><p>关系模式：关系名（属性1，属性2，属性3，·····），如：人（姓名，年龄，性别，出生年月）</p></blockquote></blockquote></li><li><p>面向对象数据模型</p></li><li><p>对象关系数据模型</p></li><li><p>半结构化数据模型</p></li></ul><h2 id="数据库系统的结构"><a href="#数据库系统的结构" class="headerlink" title="数据库系统的结构"></a>数据库系统的结构</h2><h3 id="数据库系统模式的概念"><a href="#数据库系统模式的概念" class="headerlink" title="数据库系统模式的概念"></a>数据库系统模式的概念</h3><ul><li><p>型：对一类数据和属性的说明</p></li><li><p>值：是型的一个具体赋值</p></li></ul><h3 id="模式（Schema）：是型的描述，不涉及具体值，反应的是数据的结构及其联系"><a href="#模式（Schema）：是型的描述，不涉及具体值，反应的是数据的结构及其联系" class="headerlink" title="模式（Schema）：是型的描述，不涉及具体值，反应的是数据的结构及其联系"></a>模式（Schema）：是型的描述，不涉及具体值，反应的是数据的结构及其联系</h3><h3 id="实例（Instance）：模式的一个具体值"><a href="#实例（Instance）：模式的一个具体值" class="headerlink" title="实例（Instance）：模式的一个具体值"></a>实例（Instance）：模式的一个具体值</h3><ul><li><p>例：</p><blockquote><p>在学生选课数据库模式中，包含学生记录、课程记录和学生选课记录<br>2013年的一个学生数据库实例，包含：</p><div class="hljs code-wrapper"><pre><code>    2013年学校中所有学生的记录    学校开设的所有课程的记录    所有学生选课的记录</code></pre></div><p>2012年度学生数据库模式对应的实例与<br>2013年度学生数据库模式对应的实例是不同的</p></blockquote></li></ul><h3 id="三级模式结构："><a href="#三级模式结构：" class="headerlink" title="三级模式结构："></a>三级模式结构：</h3><ul><li><p>模式（Schema）：数据库中全体数据的逻辑结构和特征的描述，一个数据库只有一个</p></li><li><p>外模式（External Schema）：数据库用户的数据视图，与某一应用有关的数据的逻辑表示</p><p>每个用户只能看见和访问所对应的外模式中的数据</p></li><li><p>内模式（Internal Schema）：数据存储的物理结构，一个数据库只有一个</p></li></ul><h3 id="二级映像功能与数据独立性：实现三级模式的联系和转换"><a href="#二级映像功能与数据独立性：实现三级模式的联系和转换" class="headerlink" title="二级映像功能与数据独立性：实现三级模式的联系和转换"></a>二级映像功能与数据独立性：实现三级模式的联系和转换</h3><blockquote><p>保证了数据库外模式的稳定性，从底层保证了应用程序的稳定性，除非应用需求本身发生变化，否则应用程序一般不需要修改</p></blockquote><ul><li><p>外模式 / 模式映像：定义外模式与模式之间的对应关系</p><blockquote><p>保证数据的逻辑独立性<br>当模式改变时，数据库管理员对外模式／模式映象作相应改变，使外模式保持不变<br>应用程序是依据数据的外模式编写的，应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性</p></blockquote></li><li><p>模式 / 内模式映像：定义内模式与模式之间的对应关系</p><blockquote><p>保证数据的物理独立性<br>当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变。<br>应用程序不受影响。保证了数据与程序的物理独立性，简称数据的物理独立性。</p></blockquote></li></ul><h2 id="数据库系统的组成"><a href="#数据库系统的组成" class="headerlink" title="数据库系统的组成"></a>数据库系统的组成</h2><ul><li>数据库</li><li>数据库管理系统（及其开发工具）</li><li>应用程序</li><li>数据库管理员</li><li>硬件平台及数据库</li><li>软件</li><li>人员</li></ul>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL练习</title>
    <link href="/2021/06/19/SQL%E7%BB%83%E4%B9%A0/"/>
    <url>/2021/06/19/SQL%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL练习题"><a href="#SQL练习题" class="headerlink" title="SQL练习题"></a>SQL练习题</h1><p>现有一数据库，包括以下4个表：学生表（student）、课程表（course）、成绩表（score）、教师信息表（teacher）。4个表的结构如下所示：</p><center>表4-1 student（学生表）</center><table><thead><tr><th align="center">属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr><td align="center">Sno</td><td>Char(3)</td><td>否</td><td>学号（主键）</td></tr><tr><td align="center">Sname</td><td>Char(8)</td><td>否</td><td>姓名</td></tr><tr><td align="center">Ssex</td><td>Char(2)</td><td>否</td><td>性别</td></tr><tr><td align="center">Sbirthday</td><td>Datetime</td><td>是</td><td>出生日期</td></tr><tr><td align="center">class</td><td>Char(5)</td><td>是</td><td>所在班级</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">table</span> student(<br>    <br>sno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">primary</span> key,<br>    <br>sname <span class="hljs-type">char</span>(<span class="hljs-number">8</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    <br>ssex <span class="hljs-type">char</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    <br>birthday datetime,<br>    <br>class <span class="hljs-type">char</span>(<span class="hljs-number">5</span>)<br>);<br></code></pre></div></td></tr></table></figure><center>表4-2 course（课程表）</center><table><thead><tr><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr><td>Cno</td><td>Char(5)</td><td>否</td><td>课程号（主键）</td></tr><tr><td>Cname</td><td>Varchar(10)</td><td>否</td><td>课程名</td></tr><tr><td>tno</td><td>Char(3)</td><td>否</td><td>教师编号（外键）</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">table</span> course(<br><br>cno <span class="hljs-type">char</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">primary</span> key,<br><br>cname <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),<br><br>tno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>),<br><br><span class="hljs-keyword">foreign</span> key(tno) <span class="hljs-keyword">references</span> teacher(tno)<br><br>)<br></code></pre></div></td></tr></table></figure><center> 表4-3 score（成绩表）</center><table><thead><tr><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr><td>Sno</td><td>Char(3)</td><td>否</td><td>学号（外键）</td></tr><tr><td>Cno</td><td>Char(5)</td><td>否</td><td>课程号（外键）</td></tr><tr><td>Degree</td><td>Decimal(4,1)</td><td>是</td><td>成绩</td></tr><tr><td>主键：sno+cno</td><td></td><td></td><td></td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> score(<br><br>sno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>),<br><br>cno <span class="hljs-type">char</span>(<span class="hljs-number">5</span>),<br><br>degree <span class="hljs-type">decimal</span>(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>),<br><br><span class="hljs-keyword">primary</span> key(sno,cno),<br><br><span class="hljs-keyword">foreign</span> key(sno) <span class="hljs-keyword">references</span> student(sno) <br><br><span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> cascade<br><br><span class="hljs-keyword">on</span> update cascade,<br><br><span class="hljs-keyword">foreign</span> key(cno) <span class="hljs-keyword">references</span> course(cno) <br><br><span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">no</span> action<br><br><span class="hljs-keyword">on</span> update cascade,<br><br>)<br></code></pre></div></td></tr></table></figure> <center> 表4-4 teacher（教师信息表） </center><table><thead><tr><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr><td>Tno</td><td>Char(3)</td><td>否</td><td>教工编号（主键）</td></tr><tr><td>Tname</td><td>Char(4)</td><td>否</td><td>教工姓名</td></tr><tr><td>Tsex</td><td>Char(2)</td><td>否</td><td>教工性别</td></tr><tr><td>Tbirthday</td><td>Datetime</td><td>是</td><td>教工出生日期</td></tr><tr><td>prof</td><td>Char(6)</td><td>是</td><td>职称</td></tr><tr><td>depart</td><td>Varchar(10)</td><td>否</td><td>教工所在部门</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> teacher(<br><br>tno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">primary</span> key,<br><br>tname <span class="hljs-type">char</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br><br>tsex <span class="hljs-type">char</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br><br>tbirthday datetime,<br><br>prof <span class="hljs-type">char</span>(<span class="hljs-number">6</span>),<br><br>depart <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>)<br><br>)<br></code></pre></div></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><ul><li>请用sql语句完成以下题目：</li></ul><p>（1）  查询student表中的所有sname、ssex和class列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,class <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（2）  查询教师所在的部门，要求不能有重复值出现。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> depart <span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure><p>（3）  查询student表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（4）  查询score表中成绩在60到90之间的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree <span class="hljs-keyword">between</span> <span class="hljs-number">60</span> <span class="hljs-keyword">and</span> <span class="hljs-number">90</span><br></code></pre></div></td></tr></table></figure><p>（5）  查询score表中成绩为85、86或88的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree <span class="hljs-keyword">in</span>(<span class="hljs-number">85</span>,<span class="hljs-number">86</span>,<span class="hljs-number">88</span>)<br></code></pre></div></td></tr></table></figure><p>（6）  查询student表中“95031”班或女生的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;5&#x27;</span> <span class="hljs-keyword">or</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（7）  以class降序查询student表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> class <span class="hljs-keyword">desc</span><br></code></pre></div></td></tr></table></figure><p>（8）  以cno升序、degree降序查询score表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cno ,degree <span class="hljs-keyword">desc</span><br></code></pre></div></td></tr></table></figure><p>（9）  查询“95031”班的学生人数。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（10）  查询每门课程的平均分。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> cno,<span class="hljs-built_in">AVG</span>(degree) <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno<br></code></pre></div></td></tr></table></figure><p>（11）  查询score表中的最高分的学生学号和课程号。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sno,cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score)<br></code></pre></div></td></tr></table></figure><p><em>（12）  查询score表中至少有5名学生选修的并以3开头的课程的平均分。</em></p><p>（13）  查询分数大于70且小于90的sno列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">70</span> <span class="hljs-keyword">and</span> degree<span class="hljs-operator">&lt;</span><span class="hljs-number">90</span><br></code></pre></div></td></tr></table></figure><p>（14）  查询所有学生的sname、cno和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cno,degree <span class="hljs-keyword">from</span><br><br>student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno<br></code></pre></div></td></tr></table></figure><p>（15）  查询所有学生的sno、cname和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> student.sno,cname,degree <span class="hljs-keyword">from</span><br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure><p>（16）  查询所有学生的sname、cname和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cname,degree <span class="hljs-keyword">from</span><br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure><p>（17）  查询95033班学生的平均分。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">AVG</span>(degree)<br><br><span class="hljs-keyword">from</span> (student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span><br></code></pre></div></td></tr></table></figure><p><em><strong>（18）  查询选修3-105课程的成绩高于109号同学成绩的所有同学的选课记录。</strong></em></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> degree <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00001&#x27;</span> <span class="hljs-keyword">and</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;001&#x27;</span>)<br><br><span class="hljs-keyword">and</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00001&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p><em><strong>（19）  查询score中选修多门课程的同学且成绩非最高分的学生选课记录。</strong></em></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <br><br>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <br><br><span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> <br><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno)) t1<br><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sno <span class="hljs-keyword">having</span> <span class="hljs-built_in">COUNT</span>(sno)<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>)<br></code></pre></div></td></tr></table></figure><p>（20）  查询成绩高于004号学生所选修的00003课程成绩的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><br><br>(<span class="hljs-keyword">select</span> degree<br><br><span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;004&#x27;</span> <span class="hljs-keyword">and</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00003&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（21）  查询与003号学生同年出生的所有学生的sno、sname和sbirthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s1.sno,s1.sname,s1.sbirthday<br><br><span class="hljs-keyword">from</span> student s1,student s2<br><br><span class="hljs-keyword">where</span> <span class="hljs-keyword">YEAR</span>(s1.sbirthday)<span class="hljs-operator">=</span><span class="hljs-keyword">YEAR</span>(s2.sbirthday) <span class="hljs-keyword">and</span> s2.sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;003&#x27;</span> <span class="hljs-keyword">and</span> s1.sno<span class="hljs-operator">&lt;&gt;</span>s2.sno<br></code></pre></div></td></tr></table></figure><p>（22）  查询ooo老师所上课程的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span><br><br>(<span class="hljs-keyword">select</span> score.sno <span class="hljs-keyword">from</span> score,teacher,course <span class="hljs-keyword">where</span> tname <span class="hljs-operator">=</span><span class="hljs-string">&#x27;ooo&#x27;</span> <span class="hljs-keyword">and</span> course.tno<span class="hljs-operator">=</span>teacher.tno <span class="hljs-keyword">and</span> score.cno<span class="hljs-operator">=</span>course.cno)<br></code></pre></div></td></tr></table></figure><p><em><strong>（23）  查询选修人数超过2人的课程的任课教师。</strong></em></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> tno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> cno <span class="hljs-keyword">in</span> (<br><br><span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(sno)<span class="hljs-operator">&gt;</span><span class="hljs-number">2</span>));<br></code></pre></div></td></tr></table></figure><p>（24）  查询1班和4班全体学生的信息。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;4&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（25）  查询成绩在85分以上的课程号cno。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">85</span><br></code></pre></div></td></tr></table></figure><p>（26）  查询数学系教师所教课程的成绩信息表。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> cno <span class="hljs-keyword">in</span><br><br>(<span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> teacher <span class="hljs-keyword">on</span> course.tno<span class="hljs-operator">=</span>teacher.tno<br><br><span class="hljs-keyword">where</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数学&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（27）  查询计算机系和数学系不同职称的教师人数。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> depart,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">distinct</span> prof)<br><br><span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数学&#x27;</span> <span class="hljs-keyword">or</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;计算机&#x27;</span><br><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> depart<br></code></pre></div></td></tr></table></figure><p><em>（28）  查询选修了3-105课程且成绩至少高于3-245课程的同学的cno、sno和degree，并按degree的降序显示。</em></p><p>（29）  查询所有教师和学生的name、sex和birthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,sbirthday<br><br><span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">union</span><br><br><span class="hljs-keyword">select</span> tname,tsex,tbirthday<br><br><span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure><p>（30）  查询所有女教师和女学生的name、sex和birthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,sbirthday<br><br><span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br><br><span class="hljs-keyword">union</span><br><br><span class="hljs-keyword">select</span> tname,tsex,tbirthday<br><br><span class="hljs-keyword">from</span> teacher <span class="hljs-keyword">where</span> tsex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（31）  查询成绩比该课程平均成绩低的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score s1<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&lt;</span><br><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(degree)<br><br><span class="hljs-keyword">from</span> score s2 <br><br><span class="hljs-keyword">where</span> s1.cno<span class="hljs-operator">=</span>s2.cno)<br></code></pre></div></td></tr></table></figure><p>（32）  查询所有任课教师的tname和depart。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname,depart <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> tno <span class="hljs-keyword">from</span> course)<br></code></pre></div></td></tr></table></figure><p>（33）  查询所有未任课教师的tname和depart。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname,depart <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> tno <span class="hljs-keyword">from</span> course)<br></code></pre></div></td></tr></table></figure><p>（34）  查询至少有1名女生的班号。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> class <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> class <span class="hljs-keyword">having</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p>（35）  查询student表中不姓王的学生记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> sname <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;王%&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（36）  查询student表中最大和最小的学生出生日期。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(sbirthday),<span class="hljs-built_in">MIN</span>(sbirthday) <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（37）  查询男教师及其所上课程的信息。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span>(<br><br><span class="hljs-keyword">select</span> tno <span class="hljs-keyword">from</span> teacher <span class="hljs-keyword">where</span> tsex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（38）  查询成绩为最高的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cname <span class="hljs-keyword">from</span> <br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score)<br></code></pre></div></td></tr></table></figure><p>（39）  查询和李军同性别且同班级的学生sname。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s1.sname <span class="hljs-keyword">from</span> student s1,student s2<br><br><span class="hljs-keyword">where</span> s1.ssex<span class="hljs-operator">=</span>s2.ssex <span class="hljs-keyword">and</span> s1.class<span class="hljs-operator">=</span>s2.class <span class="hljs-keyword">and</span> s2.sname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;yyy&#x27;</span> <span class="hljs-keyword">and</span>     s1.sno<span class="hljs-operator">&lt;&gt;</span>s2.sno<br></code></pre></div></td></tr></table></figure><p>（40）  查询所有选修数据库课程的男同学的成绩表。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span>)<br><br><span class="hljs-keyword">and</span> cno<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> cname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数据库&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h2><ol><li><p>插入数据</p><ol><li><p>全部字段</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teacher<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;122&#x27;</span>,<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;女&#x27;</span>,<span class="hljs-string">&#x27;2001/9/1&#x27;</span>,<span class="hljs-string">&#x27;讲师&#x27;</span>,<span class="hljs-string">&#x27;数学&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>部分字段 </p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teacher(tno,tname,tsex)<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;acd&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>插入子查询</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> student(sno,sname,ssex)<br><span class="hljs-keyword">select</span> tno,tname,tsex<br><span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>更新数据</p><ol><li><p>更新单条数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">update student<br><span class="hljs-keyword">set</span> class<span class="hljs-operator">=</span><span class="hljs-number">2</span><br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;111&#x27;</span><br></code></pre></div></td></tr></table></figure></li><li><p>更新多条数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">update score<br><span class="hljs-keyword">set</span> degree<span class="hljs-operator">=</span>degree<span class="hljs-operator">+</span><span class="hljs-number">10</span><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span>(<br><span class="hljs-keyword">select</span> sno<br><span class="hljs-keyword">from</span> student <br><span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>删除数据</p><ol><li><p>```sql<br>delete from student<br>where class is null</p><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql"><br>## 视图<br><br><span class="hljs-number">1.</span> 建立视图<br><br>   <span class="hljs-number">1.</span> 通过表建立，并设置对视图进行操作时要检查<span class="hljs-keyword">where</span>条件<br><br>      ```<span class="hljs-keyword">sql</span><br>      <span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> nv_Student<br>      <span class="hljs-keyword">as</span><br>      <span class="hljs-keyword">select</span> sno,sname,ssex<br>      <span class="hljs-keyword">from</span> student<br>      <span class="hljs-keyword">where</span> ssex=<span class="hljs-string">&#x27;女&#x27;</span><br>      <span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> <span class="hljs-keyword">option</span><br></code></pre></div></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stu_score<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> student.sno,sname,course.cno,cname,degree<br><span class="hljs-keyword">from</span> (student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno) <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure></li><li><p>通过已有视图建立视图</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stu_score_2<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> stu_score<br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">88</span><br></code></pre></div></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> s_g(sno,gavg)<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> sno,<span class="hljs-built_in">AVG</span>(degree)<br><span class="hljs-keyword">from</span> stu_score_2<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sno<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>查询视图</p><ol><li><p>```sql<br>select * from stu_score</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros"><br>3. 更新视图，通过视图更新基本表数据<br><br>   1. 通过stu_score视图设置学生001的00001课程的成绩为100<br><br>      ```sql<br>      update stu_score<br>      <span class="hljs-builtin-name">set</span> <span class="hljs-attribute">degree</span>=100<br>      where <span class="hljs-attribute">sno</span>=<span class="hljs-string">&#x27;001&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-attribute">cno</span>=<span class="hljs-string">&#x27;00001&#x27;</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过视图插入数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> nv_Student<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;008&#x27;</span>,<span class="hljs-string">&#x27;lpl&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)  # 不能男，因为此视图设置了<span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> nv_Student<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;008&#x27;</span>,<span class="hljs-string">&#x27;lpl&#x27;</span>,<span class="hljs-string">&#x27;女&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>通过视图删除数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> nv_Student<br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;008&#x27;</span><br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>删除视图</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> nv_Student<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> stu_score_2<br></code></pre></div></td></tr></table></figure></li></ol><h2 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h2><ul><li><p>之前创建score表的时候设置了级联删除，因此执行下面的语句后，score表中关于111号学生的成绩也会被删除。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student <br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;111&#x27;</span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><p><em><strong>加粗且斜体要特别注意</strong></em></p><h2 id="sql文件链接"><a href="#sql文件链接" class="headerlink" title="sql文件链接"></a>sql文件链接</h2><p><a href="https://pan.baidu.com/s/1QIiZTo6V03Cyi37Y4txubQ">链接: </a> 提取码:vb2y</p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>聚类分析</title>
    <link href="/2021/06/16/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <url>/2021/06/16/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h1><h2 id="层次聚类"><a href="#层次聚类" class="headerlink" title="层次聚类"></a>层次聚类</h2><ul><li><p>基本概念：形成类相似度层次图谱，便于直观的确定类之间的划分。该方法可以得到较理想的分类，但是难以处理大量样本。通过层次树决定聚类个数和聚类方式。</p></li><li><p>基本步骤：</p><ol><li><p>计算每两个观测之间的距离</p></li><li><p>.将最近的两个观测聚为一类，将其看作一个整体计算与其它观测（类）之间的距离</p></li><li><p>一直重复上述过程，直至所有的观测被聚为一类</p></li><li><p><strong>距离的测量涉及两个层面的问题：一个是观测之间的距离，另一个是类与观测或观测与观测之间的距离</strong></p><p>观测之间的距离：欧氏距离</p><p>类之间的距离：平均法、重心法、Ward最小方差法。</p></li></ol></li><li><p>案例：对中国十个城市经济数据进行聚类分析:</p></li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-comment">##读取数据集</span><br>Data&lt;-read.csv(<span class="hljs-string">&quot;cities_10.csv&quot;</span>)<br><span class="hljs-comment">##2到10列为各个城市的经济数据</span><br>CluData&lt;-Data[,<span class="hljs-number">2</span>:<span class="hljs-number">10</span>]<br><span class="hljs-comment">##生成距离矩阵，方法使用欧氏距离</span><br>DisMatrix&lt;-dist(CluData,method = <span class="hljs-string">&quot;euclidean&quot;</span>)<br><span class="hljs-comment">##进行层次聚类，method参数选择瓦德法</span><br>CluR&lt;-hclust(d=DisMatrix,method=<span class="hljs-string">&quot;ward.D&quot;</span>)<br><span class="hljs-comment">##使用plot函数绘制聚类结果的树形图</span><br>plot(CluR,labels=Data[,<span class="hljs-number">1</span>])<br></code></pre></div></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210616200209582.png" alt="聚类结果树形图"></p></blockquote><ul><li>结果分析：样本之间的水平线越短，说明两者越相似。比如福建和辽宁的水平线最短，说明两者的消费形式最接近，其次是江苏和山东。</li><li>从树形图中可以获得分类和分为几类的启示。如果想分为四类，可以像上图所示的那样，这样把上海、天津分别归为一类，把广西、河北、福建和辽宁归为一类，把山东、江苏、广东和浙江归为一类。</li></ul><h2 id="k-means聚类"><a href="#k-means聚类" class="headerlink" title="k-means聚类"></a>k-means聚类</h2><ul><li><p>基本概念：可以处理样本量大的数据，但是不能提供类相似度信息，需要事先决定聚类个数。</p></li><li><p>基本步骤：</p><ol><li>设定k值，确定聚类数（软件随机分配聚类中心所需的种子）；</li><li>计算每个记录到类中心的距离（欧式），并分成k类。</li><li>然后把k类中心（均值），作为新的中心，重新计算距离；</li><li>重复第2步直到聚类的中心不再移动。</li></ol></li><li><p>应用场景：</p><ol><li>将个案数据做划分</li><li>异常值检测</li></ol></li><li><p>案例：对上述案例采用k-means聚类方法：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">k4&lt;-kmeans(DisMatrix,centers = <span class="hljs-number">4</span>,trace = <span class="hljs-literal">TRUE</span>) <span class="hljs-comment">## DisMatrix为距离矩阵，centers为分成几类 </span><br></code></pre></div></td></tr></table></figure><ul><li>结果：</li></ul><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">K-means clustering with <span class="hljs-number">4</span> clusters of sizes <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span><br><br>Cluster means:<br>          <span class="hljs-number">1</span>         <span class="hljs-number">2</span>         <span class="hljs-number">3</span>        <span class="hljs-number">4</span>         <span class="hljs-number">5</span>        <span class="hljs-number">6</span>         <span class="hljs-number">7</span>         <span class="hljs-number">8</span>         <span class="hljs-number">9</span>        <span class="hljs-number">10</span><br><span class="hljs-number">1</span>  <span class="hljs-number">9910.261</span> <span class="hljs-number">14323.813</span> <span class="hljs-number">13745.781</span>     <span class="hljs-number">0.00</span> <span class="hljs-number">12575.144</span> <span class="hljs-number">19087.15</span>  <span class="hljs-number">8720.576</span>  <span class="hljs-number">9042.916</span> <span class="hljs-number">14058.833</span> <span class="hljs-number">17018.930</span><br><span class="hljs-number">2</span> <span class="hljs-number">27655.892</span> <span class="hljs-number">29511.575</span> <span class="hljs-number">31618.631</span> <span class="hljs-number">19087.15</span> <span class="hljs-number">26837.634</span>     <span class="hljs-number">0.00</span> <span class="hljs-number">24186.184</span> <span class="hljs-number">27193.594</span> <span class="hljs-number">26771.674</span> <span class="hljs-number">35827.956</span><br><span class="hljs-number">3</span>  <span class="hljs-number">6362.906</span>  <span class="hljs-number">3316.446</span>  <span class="hljs-number">7979.897</span> <span class="hljs-number">12419.59</span>  <span class="hljs-number">2437.858</span> <span class="hljs-number">26826.77</span>  <span class="hljs-number">3914.664</span>  <span class="hljs-number">7259.760</span>  <span class="hljs-number">3353.722</span> <span class="hljs-number">13483.506</span><br><span class="hljs-number">4</span>  <span class="hljs-number">3517.258</span>  <span class="hljs-number">7767.016</span>  <span class="hljs-number">3611.960</span> <span class="hljs-number">12429.47</span>  <span class="hljs-number">8679.445</span> <span class="hljs-number">30574.02</span>  <span class="hljs-number">7711.334</span>  <span class="hljs-number">3709.521</span> <span class="hljs-number">10928.274</span>  <span class="hljs-number">5829.637</span><br><br>Clustering vector:<br> <span class="hljs-number">1</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">5</span>  <span class="hljs-number">6</span>  <span class="hljs-number">7</span>  <span class="hljs-number">8</span>  <span class="hljs-number">9</span> <span class="hljs-number">10</span> <br> <span class="hljs-number">4</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">1</span>  <span class="hljs-number">3</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span> <span class="hljs-comment"># 分类结果</span><br><br>Within cluster <span class="hljs-built_in">sum</span> of squares by cluster:<br>[<span class="hljs-number">1</span>]         <span class="hljs-number">0</span>         <span class="hljs-number">0</span> <span class="hljs-number">138020724</span> <span class="hljs-number">382259532</span><br> (between_SS / total_SS =  <span class="hljs-number">90.9</span> %)<br><br>Available components:<br><br>[1] &quot;cluster&quot;      &quot;centers&quot;      &quot;totss&quot;        &quot;withinss&quot;     &quot;tot.withinss&quot; &quot;betweenss&quot;   <br>[7] &quot;size&quot;         &quot;iter&quot;         &quot;ifault&quot; <br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><table><thead><tr><th>AREA</th><th>X1</th><th>X2</th><th>X3</th><th>X4</th><th>X5</th><th>X6</th><th>X7</th><th>X8</th><th>X9</th></tr></thead><tbody><tr><td>辽宁</td><td>5458.2</td><td>13000</td><td>1376.2</td><td>2258.4</td><td>1315.9</td><td>529</td><td>2258.4</td><td>123.7</td><td>399.7</td></tr><tr><td>山东</td><td>10550</td><td>11643</td><td>3502.5</td><td>3851</td><td>2288.7</td><td>1070.7</td><td>3181.9</td><td>211.1</td><td>610.2</td></tr><tr><td>河北</td><td>6076.6</td><td>9047</td><td>1406.7</td><td>2092.6</td><td>1161.6</td><td>597.1</td><td>1968.3</td><td>45.9</td><td>302.3</td></tr><tr><td>天津</td><td>2022.6</td><td>22068</td><td>822.8</td><td>960</td><td>703.7</td><td>361.9</td><td>941.4</td><td>115.7</td><td>171.8</td></tr><tr><td>江苏</td><td>10636.3</td><td>14397</td><td>3536.3</td><td>3967.2</td><td>2320</td><td>1141.3</td><td>3215.8</td><td>384.7</td><td>643.7</td></tr><tr><td>上海</td><td>5408.8</td><td>40627</td><td>2196.2</td><td>2755.8</td><td>1970.2</td><td>779.3</td><td>2035.2</td><td>320.5</td><td>709</td></tr><tr><td>浙江</td><td>7670</td><td>16570</td><td>2356.5</td><td>3065</td><td>2296.6</td><td>1180.6</td><td>2877.5</td><td>294.2</td><td>566.9</td></tr><tr><td>福建</td><td>4682</td><td>13510</td><td>1047.1</td><td>1859</td><td>964.5</td><td>397.9</td><td>1663.3</td><td>173.7</td><td>272.9</td></tr><tr><td>广东</td><td>11769.7</td><td>15030</td><td>4224.6</td><td>4793.6</td><td>3022.9</td><td>1275.5</td><td>5013.6</td><td>1843.7</td><td>1201.6</td></tr><tr><td>广西</td><td>2455.4</td><td>5062</td><td>367</td><td>995.7</td><td>542.2</td><td>352.7</td><td>1025.5</td><td>15.1</td><td>186.7</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>科学上网</title>
    <link href="/2021/06/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <url>/2021/06/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<h1 id="本文教你在国内如何访问外国网站"><a href="#本文教你在国内如何访问外国网站" class="headerlink" title="本文教你在国内如何访问外国网站"></a>本文教你在国内如何访问外国网站</h1><h2 id="Step-1-注册"><a href="#Step-1-注册" class="headerlink" title="Step 1 注册"></a>Step 1 注册</h2><p>打开<a href="https://ikuuu.co/auth/login">此链接</a>，点击马上注册</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204208418.png" alt="image-20210613204208418"></p><h2 id="Step-2-登录"><a href="#Step-2-登录" class="headerlink" title="Step 2 登录"></a>Step 2 登录</h2><p>注册完成之后登录，会跳转到如下的页面，我们每个月都会有大约50GB的流量用于上外网，当然每天登录点击右上角的每日签到会额外赠送流量，一般情况下2GB左右</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204442085.png" alt="image-20210613204442085"></p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204703027.png" alt="image-20210613204703027"></p><h2 id="Step-3-安装软件"><a href="#Step-3-安装软件" class="headerlink" title="Step 3 安装软件"></a>Step 3 安装软件</h2><p>点击左侧的下载和教程：这里以Windows为例（手机只要按照教程也是可以科学上网的），下载 Clash for Windows 客户端，并安装。安装完毕之后，打开软件，然后打开刚才那个网页，点击一键托管配置到Clash for Windows。</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613205326920.png" alt="image-20210613205326920"></p><h2 id="Step-4-配置"><a href="#Step-4-配置" class="headerlink" title="Step 4 配置"></a>Step 4 配置</h2><p>配置成功之后，点击常规，打开系统代理，或者在任务栏右击这个软件的图标打开系统代理，即可科学上网。</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613205938211.png" alt="image-20210613205938211"></p>]]></content>
    
    
    <categories>
      
      <category>电脑相关</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo--d失败的解决方法</title>
    <link href="/2021/06/05/hexo-d%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2021/06/05/hexo-d%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-d出现如下错误"><a href="#hexo-d出现如下错误" class="headerlink" title="hexo d出现如下错误"></a>hexo d出现如下错误</h2><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205423425.png" alt="image-20210606205423425"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>删除博客目录下的.deploy_git文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205439634.png" alt="image-20210606205439634"></p><p>接着依次执行如下命令</p><figure class="highlight haxe"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haxe">git config --global core.autocrlf <span class="hljs-literal">false</span><br>hexo clean<br>hexo g<br>hexo d<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows彻底关闭自动更新</title>
    <link href="/2021/06/05/Windows%E5%BD%BB%E5%BA%95%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <url>/2021/06/05/Windows%E5%BD%BB%E5%BA%95%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Step1"><a href="#Step1" class="headerlink" title="Step1"></a>Step1</h2><p>win+r打开运行窗口</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204709326.png" alt="image-20210606204709326"></p><h2 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h2><p>输入gpedit.msc,点击确定</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204925978.png" alt="image-20210606204925978"></p><h2 id="Step3"><a href="#Step3" class="headerlink" title="Step3"></a>Step3</h2><p>在出现的界面中依次点击计算机配置—管理模板—Windows组件—Windows更新</p><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205101137.png" alt="image-20210606205101137"></p><h2 id="Step4"><a href="#Step4" class="headerlink" title="Step4"></a>Step4</h2><p>在右侧双击配置自动更新<br><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205224408.png" alt="image-20210606205224408"></p><h2 id="Step5"><a href="#Step5" class="headerlink" title="Step5"></a>Step5</h2><p>在弹出的界面依次点击已禁用—应用—确定<br><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205350866.png" alt="image-20210606205350866"></p><h2 id="Step7"><a href="#Step7" class="headerlink" title="Step7"></a>Step7</h2><p>finish！</p><p><a href="https://www.bilibili.com/read/cv8837270">原文链接</a></p>]]></content>
    
    
    <categories>
      
      <category>电脑相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>凑算式</title>
    <link href="/2021/06/05/%E5%87%91%E7%AE%97%E5%BC%8F/"/>
    <url>/2021/06/05/%E5%87%91%E7%AE%97%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204825132.png" alt="image-20210606204825132"></p><p>这个算式中A-I代表1~9的数字，不同的字母代表不同的数字。<br>比如：<br>6+8/3+952/714 就是一种解法，<br>5+3/1+972/486 是另一种解法。<br>这个算式一共有多少种解法？</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>利用回溯算法枚举所有组合，对每一组合判断是否满足等式。</p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ArrayList&lt;Integer&gt; path = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> num;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr,<span class="hljs-keyword">boolean</span>[] used)</span> </span>&#123;<br><span class="hljs-keyword">if</span>(path.size()==<span class="hljs-number">3</span>) &#123;<br><span class="hljs-keyword">if</span>(path.get(<span class="hljs-number">0</span>)+(path.get(<span class="hljs-number">1</span>)/path.get(<span class="hljs-number">2</span>))&gt;=<span class="hljs-number">10</span>)<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(path.size()==arr.length) &#123;<br>test(path);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br><span class="hljs-keyword">if</span>(used[i]) <span class="hljs-keyword">continue</span>;<br>used[i] = <span class="hljs-keyword">true</span>;<br>path.add(arr[i]);<br>backtracking(arr, used);<br>path.remove(Integer.valueOf(arr[i]));<br>used[i] = <span class="hljs-keyword">false</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">(ArrayList&lt;Integer&gt; p)</span> </span>&#123;<br><span class="hljs-keyword">double</span> t1 = p.get(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">double</span> t2 = p.get(<span class="hljs-number">1</span>)/(<span class="hljs-keyword">double</span>)p.get(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">int</span> a1 = <span class="hljs-number">100</span>*p.get(<span class="hljs-number">3</span>)+<span class="hljs-number">10</span>*p.get(<span class="hljs-number">4</span>)+p.get(<span class="hljs-number">5</span>);<br><span class="hljs-keyword">int</span> a2 = <span class="hljs-number">100</span>*p.get(<span class="hljs-number">6</span>)+<span class="hljs-number">10</span>*p.get(<span class="hljs-number">7</span>)+p.get(<span class="hljs-number">8</span>);<br><span class="hljs-keyword">double</span> t3 = a1/(<span class="hljs-keyword">double</span>)a2;<br><span class="hljs-keyword">if</span>(t1+t2+t3==<span class="hljs-number">10</span>) &#123;<br>num++;<br>System.out.println(p);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-keyword">int</span>[] a = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>&#125;;<br><span class="hljs-keyword">boolean</span>[] used = &#123;<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>&#125;;<br>backtracking(a, used);<br>System.out.println(num);<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java实现行列式的计算</title>
    <link href="/2021/06/05/Java%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <url>/2021/06/05/Java%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>简单地说，从一个$ n \times n $ 的方阵中选取不同行不同列的$ n $ 个数，加上符号（由逆序数确定），把所有的取法加到一起即为行列式的值。</p><h2 id="按一行展开"><a href="#按一行展开" class="headerlink" title="按一行展开"></a>按一行展开</h2><p>按照一行展开，这一行的每个元素乘以对应元素的代数余子式，最终求和，即为行列式的计算结果。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">det</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d,<span class="hljs-keyword">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">return</span> d[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]*d[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]-d[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]*d[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>];<br>    &#125;<br>    <span class="hljs-keyword">double</span>[][] d1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[n-<span class="hljs-number">1</span>][n-<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;j&lt;n;j++) &#123;<span class="hljs-comment">//按照第一行的第j个元素展开计算</span><br>        subDet(d,d1,j);<br>        res += java.lang.Math.pow(-<span class="hljs-number">1</span>, j)*d[<span class="hljs-number">0</span>][j]*det(d1,n-<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 算余子式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 原先的行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d1 余子式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> j 不选择j列</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subDet</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">double</span>[][] d1, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>;i&lt;d.length;i++) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>,l = <span class="hljs-number">0</span>;l&lt;d[i].length;l++) &#123;<br>            <span class="hljs-keyword">if</span>(l!=j)<span class="hljs-comment">//不能选择第j列</span><br>                d1[i-<span class="hljs-number">1</span>][k++] = d[i][l];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="化为上三角形"><a href="#化为上三角形" class="headerlink" title="化为上三角形"></a>化为上三角形</h2><p>利用行列式的性质，可以将行列式化为上三角形，最终只计算对角线上元素即可。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">// 下面是把行列式化为上三角形再进行计算的程序</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> c = <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从第i行开始将d化为上三角形</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> i 行指标</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">upDiag</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">int</span> i)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(i==d.length-<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-keyword">if</span>(d[i][i]==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>; j &lt; d.length; j++) &#123;<br>            <span class="hljs-keyword">if</span>(d[j][i]!=<span class="hljs-number">0</span>) &#123;<br>                swap(d,i,j);<span class="hljs-comment">//交换d的第i行和第j行</span><br>                c = -<span class="hljs-number">1</span>*c;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br><span class="hljs-comment">//if(d[i][i] != 1.0) &#123;//将首行第一个元素变为1</span><br><span class="hljs-comment">//double t = d[i][i];</span><br><span class="hljs-comment">//c = c*t;</span><br><span class="hljs-comment">//for(int j = i;j&lt;d[i].length;j++) &#123;</span><br><span class="hljs-comment">//d[i][j] = d[i][j]/t;</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-comment">//&#125;</span><br>    <span class="hljs-keyword">double</span> t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>;j&lt;d.length;j++) &#123;<span class="hljs-comment">//把第j行的首个元素变为0</span><br>        <span class="hljs-keyword">if</span> (d[j][i] != <span class="hljs-number">0</span>)&#123;<br>            t = -d[j][i] / d[i][i];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = i; k &lt; d[j].length; k++) &#123;<span class="hljs-comment">//同时本行的其他元素也要加上相应的倍数</span><br>                d[j][k] = d[j][k] + t * d[i][k];<br>            &#125;<br>        &#125;<br>    &#125;<br>    upDiag(d, i+<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 交换i行和j行</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> i 交换的行</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> j 与i进行交换的行</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>    <span class="hljs-keyword">double</span> t;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = i; k &lt; d[i].length; k++) &#123;<br>        t = d[i][k];<br>        d[i][k] = d[j][k];<br>        d[j][k] = t;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年蓝桥杯国赛经历</title>
    <link href="/2021/06/05/2021%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%9B%BD%E8%B5%9B%E7%BB%8F%E5%8E%86/"/>
    <url>/2021/06/05/2021%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%9B%BD%E8%B5%9B%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h2 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h2><p>​        今天参加了蓝桥杯2021年国赛，早上去比赛是过A05 的，之后就奔向赛场。放下手机，立地成佛。</p><h2 id="赛前"><a href="#赛前" class="headerlink" title="赛前"></a>赛前</h2><p>​        比赛地点在A09-511的机房，去到那里，老师和另一个选手已经在那里了，我们聊着这比赛以及一些事情。我学的这些算法都是自己自学的，没有老师教，那位嵌入式的也应该跟我是一样的。我们聊到了专业的课程设置，听那老师说物电的学生兼顾软硬件结合，确实如此，威就是这样的一个人，既能懂底层的原理，又会通过软件来实现，这样子挺好。不像我学的这个专业，一些底层是如何实现的都没有教，数学系的学生不应该更加注重数学的知识吗，大三开的课几乎都是计算机的，而且。。。等到实习的时候，建议我们报个班，交个两万块钱，培训一下，给你找一个工作，完事，然后在院系里写着某某某在哪个互联网公司，月薪多少k。唉。</p><h2 id="赛中"><a href="#赛中" class="headerlink" title="赛中"></a>赛中</h2><p>​        9点钟的时候，开始比赛，看到第一题，这么简单的吗？？接着做，第二、三题，都写出来了，第四题看到是二叉树的就直接跳过了。第五题是程序题，给你一个字符串（包含小写大写字母），让你转化为大写的，属于签到题。第六题123，也可以做，但是我写了一个半小时。最后总共写了7个题目吧，3个填空，4个程序设计（两个暴力，估计得不了几分）。</p><h2 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h2><p>​        这是第一次参加国家级的比赛，收获还是比较多的，每当自己想不出来怎么做或者怎么实现算法的效率更高，看了别人的算法就觉得这想法真神奇啊。</p>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
